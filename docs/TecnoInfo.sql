-- --------------------------------------------------------
-- Servidor:                     127.0.0.1
-- Versão do servidor:           10.4.18-MariaDB - mariadb.org binary distribution
-- OS do Servidor:               Win64
-- HeidiSQL Versão:              11.2.0.6213
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


-- Copiando estrutura do banco de dados para tecnoinfo
CREATE DATABASE IF NOT EXISTS `tecnoinfo` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;
USE `tecnoinfo`;

-- Copiando estrutura para tabela tecnoinfo.administrador
CREATE TABLE IF NOT EXISTS `administrador` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `idUsu` int(11) NOT NULL,
  `nome` varchar(100) NOT NULL,
  `foto` varchar(255) DEFAULT NULL,
  `email` varchar(100) NOT NULL,
  `senha` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`),
  KEY `idUsu` (`idUsu`),
  CONSTRAINT `administrador_ibfk_1` FOREIGN KEY (`idUsu`) REFERENCES `usuarios` (`idUsu`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.administrador: ~1 rows (aproximadamente)
/*!40000 ALTER TABLE `administrador` DISABLE KEYS */;
INSERT IGNORE INTO `administrador` (`id`, `idUsu`, `nome`, `foto`, `email`, `senha`) VALUES
	(30, 224, 'Jovii', '../../img/adm/67477cca3b7b1.jpg', 'jovi@adm', '$2y$10$YAjr5511RefbwIQBAhTac.cRCbYbnVhz2nzCYcTSkMueuGzHmBDGK');
/*!40000 ALTER TABLE `administrador` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.aluno
CREATE TABLE IF NOT EXISTS `aluno` (
  `idAlu` int(11) NOT NULL AUTO_INCREMENT,
  `idUsu` int(11) NOT NULL,
  `nome` varchar(100) NOT NULL,
  `foto` varchar(255) DEFAULT NULL,
  `email` varchar(100) NOT NULL,
  `senha` varchar(255) NOT NULL,
  `turma` int(11) DEFAULT NULL,
  `unidade_ensino_id` int(11) DEFAULT NULL,
  `idTurma` int(11) DEFAULT NULL,
  PRIMARY KEY (`idAlu`),
  UNIQUE KEY `email` (`email`),
  KEY `turma_ibfk_2` (`idTurma`),
  KEY `aluno_unidade_fk` (`unidade_ensino_id`),
  KEY `idUsu` (`idUsu`),
  CONSTRAINT `aluno_ibfk_1` FOREIGN KEY (`idUsu`) REFERENCES `usuarios` (`idUsu`) ON DELETE CASCADE,
  CONSTRAINT `aluno_ibfk_2` FOREIGN KEY (`unidade_ensino_id`) REFERENCES `unidade_ensino` (`idUni`) ON DELETE SET NULL,
  CONSTRAINT `turma_ibfk_2` FOREIGN KEY (`idTurma`) REFERENCES `turma` (`idTurma`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=220 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.aluno: ~2 rows (aproximadamente)
/*!40000 ALTER TABLE `aluno` DISABLE KEYS */;
INSERT IGNORE INTO `aluno` (`idAlu`, `idUsu`, `nome`, `foto`, `email`, `senha`, `turma`, `unidade_ensino_id`, `idTurma`) VALUES
	(66, 189, 'Lindalva Romano', '67452f4341f94-user7.jpeg', 'linda@gmail.com', '$2y$10$mWgb7aQ8eqLB/7fEcwnbjeXVPlo8GKW8K73DvZtPntaVv88ibCL5a', NULL, NULL, NULL),
	(69, 214, 'Izabele Regina', '../../img/user/joviza.jpeg', 'iza@alu', '$2y$10$tIHjwB9tag3vA65rXqCAi.G1LNlkEhAGaYzaKq02oAS2Y9mdNXLW2', NULL, NULL, NULL),
	(218, 242, 'Iza', '', 'izaa@alu', '$2y$10$XzgXnLzuRwZ15QTnBU9E2uY27Njg3AKKac9viz1GywBxu5JN6sWiK', NULL, NULL, NULL);
/*!40000 ALTER TABLE `aluno` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.aula
CREATE TABLE IF NOT EXISTS `aula` (
  `cod_aula` int(11) NOT NULL AUTO_INCREMENT,
  `cod_modulo` int(11) DEFAULT NULL,
  `titulo_aula` varchar(50) DEFAULT NULL,
  `intro_aula` mediumtext DEFAULT NULL,
  `conteudo_aula` mediumtext DEFAULT NULL,
  `ex_aula` mediumtext DEFAULT NULL,
  `video_url` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`cod_aula`),
  KEY `cod_modulo` (`cod_modulo`),
  CONSTRAINT `aula_ibfk_1` FOREIGN KEY (`cod_modulo`) REFERENCES `modulo` (`cod_modulo`)
) ENGINE=InnoDB AUTO_INCREMENT=68 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.aula: ~35 rows (aproximadamente)
/*!40000 ALTER TABLE `aula` DISABLE KEYS */;
INSERT IGNORE INTO `aula` (`cod_aula`, `cod_modulo`, `titulo_aula`, `intro_aula`, `conteudo_aula`, `ex_aula`, `video_url`) VALUES
	(24, 68, 'Introdução à POO', 'Nesta aula, vamos explorar a Programação Orientada a Objetos (POO), uma abordagem que transformou o desenvolvimento de software ao organizar o código em torno de "objetos" que representam tanto dados quanto comportamentos. Essa metodologia permite criar modelos que refletem a complexidade do mundo real, facilitando a compreensão, reutilização e manutenção do código. Com conceitos como herança, polimorfismo e encapsulamento, a POO oferece uma estrutura hierárquica que protege dados sensíveis e promove a modularidade. Durante a aula, discutiremos os princípios fundamentais da POO e suas aplicações práticas, preparando você para aprimorar suas habilidades como programador.', 'A programação é uma área cheia de ferramentas e técnicas que ajudam a resolver problemas de forma eficiente. Uma das principais ferramentas que todo programador precisa dominar é o uso de loops. Em linguagens como Python, os loops são iniciados com comandos como for e while, que permitem repetir uma série de instruções até que uma determinada condição seja satisfeita.\r\n\r\nAo trabalhar com diferentes tipos de dados, é comum encontrar variáveis que armazenam números inteiros e números decimais. Por exemplo, o tipo de dado que armazena números inteiros em Python é o int, enquanto números com casas decimais são armazenados no tipo float. A escolha correta do tipo de dado é fundamental para garantir que as operações matemáticas sejam realizadas corretamente.\r\n\r\nAs estruturas de controle desempenham um papel crucial na lógica de qualquer programa. Por exemplo, em Java, é possível controlar o fluxo do programa usando estruturas condicionais como if e switch, que permitem tomar decisões com base em condições específicas. Essas estruturas são essenciais para garantir que o programa responda de forma adequada a diferentes entradas de dados.\r\n\r\nFalando em funções, em linguagens como JavaScript, as funções são definidas utilizando a palavra-chave function, seguida do nome da função e parênteses. Essa forma de organização facilita a reutilização de código e ajuda a modularizar grandes projetos em blocos menores e mais gerenciáveis.\r\n\r\nAo armazenar dados, as estruturas de dados são fundamentais para organizar as informações de maneira eficiente. Em Python, por exemplo, a estrutura Dictionary é ideal para armazenar pares chave-valor, facilitando o acesso a dados relacionados. Outros tipos de estruturas, como listas e conjuntos, também são úteis em diferentes situações, dependendo da necessidade do programa.\r\n\r\nEm termos de programação orientada a objetos, a classe é o coração dessa abordagem. Ela funciona como um modelo ou um plano para a criação de objetos. As classes definem as propriedades e os comportamentos que os objetos devem ter, proporcionando uma forma organizada de estruturar o código.\r\n\r\nQuando se trata de comentar o código, é importante utilizar a sintaxe correta para cada linguagem. Em C, por exemplo, o comentário de linha única é iniciado com //, permitindo que os programadores adicionem notas ou explicações sem afetar a execução do código.\r\n\r\nA manipulação de strings é outra habilidade comum, especialmente em linguagens como Python. Para concatenar duas strings, o operador + é amplamente utilizado. Essa operação permite combinar duas ou mais sequências de texto em uma única string, facilitando o trabalho com textos dinâmicos.\r\n\r\nDurante a execução de loops, pode ser necessário interromper o ciclo antes que ele atinja sua condição final. Para isso, a palavra-chave break é usada. Ela encerra imediatamente o loop, permitindo que o fluxo do programa continue após o bloco de repetição.\r\n\r\nFinalmente, ao interagir com bancos de dados relacionais, a linguagem mais comum para enviar comandos e recuperar informações é a SQL. Essa linguagem é usada para criar, ler, atualizar e excluir dados armazenados em tabelas, tornando-se uma ferramenta essencial para desenvolvedores que trabalham com grandes volumes de informações.\r\n\r\n', 'Exercício 1: Lógica de Programação Qual dos seguintes comandos é usado para iniciar um loop em Python? \r\na) for\r\n b) while \r\nc) loop \r\nd) iterate\r\n\r\nExercício 2: Tipos de Dados Qual é o tipo de dado que representa um número decimal em Python? \r\na) int\r\nb) float\r\nc) string\r\nd) boolean\r\n\r\nExercício 3: Estruturas de Controle Qual das seguintes opções representa uma estrutura condicional em Java?\r\na) if (condição) { }\r\nb) switch (condição) { }\r\nc) for (inicialização; condição; incremento) { }\r\nd) while (condição) { } \r\n\r\nExercício 4: Funções Em JavaScript, como você define uma função? \r\na) function minhaFuncao() { } \r\nb) define minhaFuncao() { } \r\nc) func minhaFuncao() { } \r\nd) function: minhaFuncao() { } \r\n\r\nExercício 5: Estruturas de Dados Qual estrutura de dados é mais adequada para armazenar pares chave-valor em Python? \r\na) List \r\nb) Tuple \r\nc) Dictionary \r\nd) Set \r\n\r\nExercício 6: Programação Orientada a Objetos O que é uma classe em programação orientada a objetos? \r\na) Uma variável que armazena dados \r\nb) Uma instância de um objeto \r\nc) Um modelo para criar objetos \r\nd) Uma função que retorna valores\r\n\r\nExercício 7: Sintaxe Qual é o símbolo usado para comentar uma linha em C?\r\na) // \r\nb) # \r\nc) /* \r\nd) -- \r\n\r\nExercício 8: Manipulação de Strings Qual das seguintes opções é a maneira correta de concatenar duas strings em Python? \r\na) str1 + str2 \r\nb) str1.append(str2) \r\nc) str1.concat(str2) \r\nd) str1.join(str2) \r\n\r\nExercício 9: Controle de Fluxo O que a palavra-chave break faz em um loop? \r\na) Interrompe o loop \r\nb) Continua para a próxima iteração \r\nc) Exibe uma mensagem de erro \r\nd) Finaliza o programa \r\n\r\n Exercício 10: Banco de Dados Qual linguagem é normalmente usada para interagir com bancos de dados relacionais? \r\na) SQL \r\nb) HTML \r\nc) CSS \r\nd) JavaScript ', 'https://www.youtube.com/watch?v=f-aDDLRmugU'),
	(25, 69, 'Aula 01: O que é Robótica?', 'Nesta aula, iremos explorar o fascinante mundo da robótica. A robótica é um campo multidisciplinar que combina engenharia, ciência da computação e inteligência artificial para criar máquinas que podem realizar tarefas de forma autônoma ou semi-autônoma. Veremos como os robôs têm evoluído ao longo do tempo e como estão se tornando parte integrante do nosso cotidiano, desde robôs industriais que montam carros até assistentes pessoais que nos ajudam em nossas tarefas diárias. A robótica não apenas transforma a forma como trabalhamos, mas também redefine o que consideramos possível na interação homem-máquina.\r\n', 'A robótica é definida como a ciência e a tecnologia de projetar, construir e operar robôs. Os primeiros autômatos surgiram na antiguidade, mas a robótica moderna começou a ganhar destaque na metade do século XX. Os robôs são utilizados em diversas áreas, como medicina, exploração espacial, agricultura e até mesmo em nossas casas. Nesta aula, discutiremos as diferentes categorias de robôs, como robôs industriais, robôs móveis e robôs de serviço. Além disso, abordaremos a importância da robótica no aumento da eficiência e na redução de riscos em tarefas perigosas.\r\n\r\nA evolução dos robôs também está atrelada ao avanço das tecnologias digitais e da inteligência artificial. Com o desenvolvimento de algoritmos mais sofisticados, os robôs estão se tornando cada vez mais inteligentes, sendo capazes de aprender com as experiências e se adaptar a novas situações. Esta capacidade de aprendizado é crucial para a utilização de robôs em ambientes dinâmicos, como em fábricas ou mesmo em operações de resgate.\r\n\r\nAo longo do curso, discutiremos como os robôs podem trabalhar em conjunto com os seres humanos, aumentando a produtividade e permitindo que os trabalhadores se concentrem em tarefas mais complexas e criativas. Essa interação homem-máquina é uma área de pesquisa em crescimento, com implicações significativas para o futuro do trabalho. É importante entender tanto as oportunidades quanto os desafios que a robótica apresenta em nossa sociedade.', '1 -Escreva uma breve descrição de um robô que você considera inovador e explique como ele impacta a sociedade. \r\n\r\n2 -Participe de uma atividade prática em que você desenhará um robô do futuro, imaginando suas funções e como ajudaria as pessoas no dia a dia. \r\n\r\n3- Pesquise e apresente um exemplo de robô que foi desenvolvido para melhorar a vida em comunidades. 4 - Discuta em grupos como você imagina a evolução da robótica nos próximos 20 anos.', 'https://www.youtube.com/watch?v=3YBBbJbn4Yw'),
	(27, 71, 'Aula 01: O que é o Pacote Office?', '\r\nO Pacote Office é uma suíte de aplicativos de escritório desenvolvida pela Microsoft, amplamente utilizada em ambientes profissionais e acadêmicos. Ele inclui programas como Word, Excel, PowerPoint e Outlook, cada um projetado para atender a necessidades específicas de produtividade. Nesta aula, vamos explorar a história do Pacote Office, sua evolução ao longo dos anos e a importância de dominar esses aplicativos no mundo moderno.\r\n', 'A história do Pacote Office começou na década de 1980, quando a Microsoft lançou suas primeiras versões dos aplicativos. Desde então, o Pacote Office evoluiu significativamente, adicionando novos recursos e funcionalidades que aumentam a eficiência do trabalho. O Pacote Office não é apenas uma ferramenta de edição de documentos, mas uma plataforma completa para a criação de apresentações, gestão de dados e comunicação.\r\n\r\nCada aplicativo do Pacote Office possui suas características únicas. O Microsoft Word é amplamente utilizado para a criação de documentos de texto, oferecendo uma variedade de ferramentas de formatação e revisão. O Excel é um poderoso software de planilhas, ideal para análise de dados e criação de gráficos, enquanto o PowerPoint é a ferramenta escolhida para a elaboração de apresentações visuais. O Outlook, por sua vez, integra e-mails, calendários e contatos, facilitando a comunicação e organização pessoal.\r\n\r\nDominar o Pacote Office é uma habilidade essencial no mercado de trabalho atual, pois muitos empregadores buscam candidatos que tenham conhecimento prático desses aplicativos. Além disso, a familiaridade com o Pacote Office pode melhorar a produtividade e a eficiência em diversas tarefas, desde a criação de relatórios até a apresentação de projetos. Durante o curso, enfatizaremos a aplicação prática de cada ferramenta para preparar os alunos para o uso no dia a dia.', '1- Pesquise e faça uma breve apresentação sobre a evolução do Pacote Office desde seu lançamento até hoje. 2- Escreva um parágrafo explicando a importância do Pacote Office em ambientes profissionais e acadêmicos. 3- Crie uma lista dos aplicativos do Pacote Office e suas principais funcionalidades. 4-Discuta em grupo como você já utilizou ou pretende utilizar o Pacote Office em sua vida profissional.', 'https://youtube.com/watch?v=j3Qez3rDGkY'),
	(28, 72, 'Aula 01: Geradores e Iteradores', 'Nesta aula, vamos explorar os conceitos de geradores e iteradores em Python, que são ferramentas poderosas para trabalhar com grandes volumes de dados de forma eficiente e econômica em termos de memória. Vamos começar entendendo o que são iteradores. Eles são objetos que permitem percorrer uma coleção de elementos, como listas ou dicionários, um de cada vez. Os iteradores seguem um protocolo específico, implementando os métodos __iter__() e __next__(), que tornam possível iterar sobre eles.', 'Os geradores, por outro lado, são uma maneira mais simplificada e concisa de criar iteradores. Em vez de construir um objeto complexo com classes, podemos simplesmente criar uma função que utiliza a palavra-chave yield para retornar valores de forma sequencial. Isso significa que, ao chamar a função geradora, ela não executa todo o seu código de uma vez; em vez disso, ela produz um valor, e a execução é pausada até que o próximo valor seja solicitado. Essa abordagem permite economizar memória, pois não armazenamos todos os elementos na memória simultaneamente, mas geramos cada valor sob demanda.\r\n\r\nVamos ver como isso se aplica na prática. Primeiro, vamos criar um gerador que produz números da sequência de Fibonacci. A sequência começa com 0 e 1, e cada número subsequente é a soma dos dois anteriores. Com o nosso gerador, vamos definir um limite, e ele irá gerar números de Fibonacci até que esse limite seja alcançado. Esse exercício nos ajudará a entender como usar geradores para criar sequências de números de maneira eficiente.\r\n\r\nAlém disso, vamos discutir as aplicações práticas dos geradores e iteradores em situações do mundo real, como a leitura de arquivos grandes ou o processamento de dados em fluxo. Essa capacidade de manipular grandes volumes de dados sem sobrecarregar a memória é extremamente valiosa, especialmente em projetos que envolvem análise de dados ou desenvolvimento de aplicações que precisam lidar com grandes quantidades de informações.\r\n\r\nPor fim, os alunos estarão equipados com uma compreensão clara dos conceitos de geradores e iteradores em Python, além de habilidades práticas para aplicar esses conceitos em seus projetos.', '1 - Criar um Iterador: Implemente uma classe chamada Contador, que funciona como um iterador, permitindo contar de 1 até um número especificado.\r\n\r\n2 - Criar um Gerador: Escreva uma função chamada gerador_fibonacci, que gera números da sequência de Fibonacci até um número limite fornecido.\r\n\r\n3 - Usar Geradores de Expressão: Crie um gerador de expressão que gere os quadrados dos números de 1 a 10 e imprima cada número.', 'https://www.youtube.com/watch?v=S9uPNppGsGo&list=PLvE-ZAFRgX8hnECDn1v9HNTI71veL3oW0'),
	(29, 73, 'Aula 01: Primeiros passos', 'Nesta aula, vamos introduzir os conceitos fundamentais relacionados à montagem de computadores, um processo que combina conhecimento técnico e habilidades práticas. Montar um computador pode parecer uma tarefa intimidadora, mas, ao entendermos as funções e interações de cada componente, podemos tornar essa experiência mais acessível e até prazerosa.', 'Começaremos com uma visão geral dos principais componentes de um computador, incluindo a placa-mãe, processador (CPU), memória RAM, unidade de armazenamento (HDD ou SSD), fonte de alimentação, e periféricos como teclado e mouse. Cada um desses elementos desempenha um papel vital no funcionamento do sistema, e entender suas especificações e interações é essencial para uma montagem bem-sucedida.\r\n\r\nA montagem de um computador envolve não apenas a instalação física de cada peça, mas também a compreensão das conexões necessárias para garantir que tudo funcione corretamente. Veremos como se conectar os cabos de alimentação, dados e outros componentes, bem como a importância de organizar o espaço de trabalho para evitar danos e garantir uma montagem eficiente.\r\n\r\nOutro aspecto que abordaremos é a importância da compatibilidade entre os componentes. Discutiremos como escolher uma placa-mãe adequada para o processador e a RAM, e como verificar se a fonte de alimentação possui potência suficiente para suportar todos os componentes. Essa compreensão evitará problemas futuros e garantirá que o sistema funcione de forma otimizada.\r\n\r\nAlém disso, falaremos sobre cuidados de segurança durante o processo de montagem, como evitar descargas eletrostáticas e garantir que os componentes sejam manuseados corretamente para evitar danos. Ao final da aula, os alunos estarão prontos para iniciar suas próprias montagens, compreendendo os conceitos básicos e as melhores práticas para garantir um trabalho bem-feito.\r\nA montagem de computadores envolve uma série de etapas que podem ser organizadas de forma sistemática. Primeiramente, é fundamental reunir todas as ferramentas necessárias, que incluem chaves de fenda, pinças e, em alguns casos, dispositivos para medir a voltagem. Ter um espaço de trabalho limpo e bem iluminado é essencial para evitar a perda de peças e garantir que todas as etapas sejam realizadas com precisão.\r\n\r\nIniciaremos pela instalação da placa-mãe, que é o coração do computador. É importante colocar a placa-mãe em um suporte antieletrostático antes de conectar qualquer componente. A seguir, inseriremos o processador no soquete da placa-mãe, tomando cuidado para alinhar os pinos corretamente. Após isso, instalaremos a memória RAM nos slots apropriados, garantindo que os clipes de retenção estejam funcionando corretamente.\r\n\r\nDepois de preparar a placa-mãe, ela será instalada no gabinete, onde conectaremos a fonte de alimentação. É crucial verificar a potência da fonte, que deve ser suficiente para suportar todos os componentes do sistema. Em seguida, conectaremos as unidades de armazenamento, sejam elas HDDs ou SSDs, e os cabos de dados correspondentes.\r\n\r\nA organização dos cabos dentro do gabinete é um aspecto frequentemente negligenciado, mas que contribui significativamente para a eficiência do sistema e a facilidade de manutenção futura. Um bom gerenciamento de cabos não apenas melhora a estética, mas também favorece a circulação de ar, evitando o superaquecimento dos componentes.\r\n\r\nPor fim, discutiremos a importância de realizar testes de funcionalidade após a montagem. É recomendável conectar todos os periféricos e fazer um primeiro boot para verificar se o sistema inicializa corretamente. Em caso de falhas, abordaremos técnicas de diagnóstico que ajudam a identificar problemas, como a verificação de conexões e a identificação de componentes defeituosos.\r\n\r\n', '1 - Montagem Simulada: Crie um diagrama que represente a montagem de um computador, incluindo todos os componentes e suas conexões.\r\n\r\n2 - Pesquisa de Compatibilidade: Escolha um processador e uma placa-mãe, e verifique se são compatíveis. Justifique sua escolha com base nas especificações técnicas.\r\n\r\n3 - Lista de Ferramentas: Elabore uma lista de ferramentas essenciais para a montagem de computadores, explicando a função de cada uma.', 'https://www.youtube.com/watch?v=-O-B6qPJeUE'),
	(30, 74, 'Aula 1: Eficácia no Uso do Microsoft Excel', 'Nesta aula, vamos nos aprofundar nas funcionalidades do Microsoft Excel, uma das ferramentas mais poderosas do Pacote Office, amplamente utilizada para manipulação e análise de dados. Excel não é apenas uma simples ferramenta de planilha; ele oferece uma gama de funcionalidades que podem transformar dados brutos em informações significativas. O objetivo é fornecer aos alunos habilidades práticas que aumentem sua produtividade e eficácia na manipulação de dados.', 'Começaremos com uma revisão das funções básicas do Excel, como inserção de dados, formatação de células e criação de gráficos. Em seguida, exploraremos funções mais avançadas, incluindo fórmulas de busca, como VLOOKUP e HLOOKUP, que são essenciais para encontrar dados em tabelas grandes. Os alunos aprenderão a organizar informações, utilizando tabelas dinâmicas para resumir grandes volumes de dados, tornando a análise mais intuitiva.\r\n\r\nA aula também abordará a importância da validação de dados, que ajuda a garantir que as informações inseridas sejam precisas e consistentes. Discutiremos como implementar listas suspensas e regras de formatação condicional para destacar informações relevantes.\r\n\r\nAlém disso, exploraremos o uso de gráficos para visualização de dados, permitindo que os alunos apresentem suas descobertas de forma clara e concisa. Ensinaremos como criar diferentes tipos de gráficos, como gráficos de coluna, linha e pizza, e quando cada um é mais apropriado.\r\n\r\nAo final da aula, os alunos estarão aptos a criar planilhas que não apenas apresentem dados, mas que também contenham análises significativas e visualizações que facilitam a compreensão e a apresentação das informações.\r\nO Excel se destaca como uma ferramenta essencial para qualquer profissional que trabalhe com dados. Nesta aula, vamos explorar como utilizar suas funcionalidades para maximizar a eficiência em suas tarefas diárias. Começaremos com a formatação de células, que permite personalizar a apresentação dos dados, tornando-as mais legíveis e atrativas.\r\n\r\nEm seguida, passaremos para a criação de fórmulas básicas, como soma, média e contagem. Essas fórmulas são fundamentais para realizar cálculos rápidos e são a base para funções mais complexas. A seguir, abordaremos funções de pesquisa, como VLOOKUP e HLOOKUP, que ajudam a extrair informações específicas de grandes conjuntos de dados. Essas funções são indispensáveis em ambientes corporativos, onde é comum trabalhar com tabelas extensas.\r\n\r\nAs tabelas dinâmicas são um recurso poderoso que permitirá aos alunos resumir e analisar dados de maneira interativa. Vamos demonstrar como criar uma tabela dinâmica a partir de um conjunto de dados, permitindo que os alunos reorganizem e filtrem informações de forma rápida e eficaz.\r\n\r\nA validação de dados é outro recurso importante que abordaremos. Com isso, os alunos aprenderão a evitar erros comuns, configurando listas suspensas para entradas e definindo critérios que garantem a integridade das informações. Esta prática é especialmente útil em ambientes colaborativos, onde múltiplos usuários podem inserir dados em uma mesma planilha.\r\n\r\nPara aprimorar a visualização de dados, ensinaremos como criar gráficos. Os gráficos transformam números em representações visuais, facilitando a interpretação das informações. Vamos explorar como criar diferentes tipos de gráficos e discutir qual é o mais adequado para cada tipo de dados.', '1 - Análise de Dados: Utilize uma tabela de vendas fornecida e crie uma tabela dinâmica para resumir as vendas por região e por produto. Apresente suas conclusões em um gráfico apropriado.\r\n\r\n2 - Função de Pesquisa: Crie uma tabela com dados de funcionários, incluindo nome, cargo e salário. Utilize a função VLOOKUP para encontrar o salário de um funcionário específico.\r\n\r\n3 - Validação de Dados: Crie uma planilha para registro de presença em uma aula, utilizando validação de dados para garantir que os alunos só possam marcar presença em uma lista pré-definida.', 'https://www.youtube.com/watch?v=sCHGTKRw5C0'),
	(31, 75, 'Aula 1: Criação de Documentos Profissionais', 'Nesta aula, vamos explorar as funcionalidades avançadas do Microsoft Word, uma das ferramentas mais utilizadas para a criação e edição de documentos textuais. O Word não é apenas um editor de texto; ele oferece uma variedade de recursos que permitem aos usuários criar documentos profissionais de maneira eficiente e atraente. O objetivo desta aula é capacitar os alunos a utilizarem as ferramentas do Word para produzir documentos que atendam aos padrões do mercado.', 'Iniciaremos com uma revisão das funções básicas do Word, como formatação de texto e parágrafos, antes de mergulharmos em funcionalidades mais sofisticadas, como a inserção de tabelas, imagens e gráficos. Os alunos aprenderão a criar layouts personalizados e a aplicar estilos de formatação que tornam os documentos mais coesos e visivelmente agradáveis.\r\n\r\nEm seguida, discutiremos a importância da utilização de cabeçalhos e rodapés para documentar informações relevantes, como números de página e títulos. Os alunos também aprenderão a inserir referências, como notas de rodapé e citações, utilizando o recurso de referências do Word, essencial para a produção de trabalhos acadêmicos e relatórios.\r\n\r\nAlém disso, abordaremos a criação de sumários automáticos, que facilitam a navegação em documentos longos, e a utilização de seções para dividir o conteúdo de maneira organizada. Os alunos terão a oportunidade de aplicar essas técnicas em um projeto prático, criando um documento de aparência profissional.\r\n\r\nAo final da aula, os alunos estarão aptos a usar o Microsoft Word para criar documentos que não só atendem aos padrões de formatação, mas também incorporam elementos visuais e estruturais que melhoram a compreensão e apresentação do conteúdo.\r\n\r\nO Microsoft Word é uma ferramenta poderosa para a criação de documentos, oferecendo uma variedade de recursos que ajudam a criar textos organizados e visualmente atraentes. Nesta aula, começaremos com a formatação básica, abordando como escolher fontes, tamanhos e cores que se adequem ao estilo desejado.\r\n\r\nDepois, passaremos para a inserção de tabelas, que permitem organizar dados de forma clara. Os alunos aprenderão a personalizar tabelas, ajustando bordas, cores e estilos para que se encaixem no tema do documento. A seguir, exploraremos a inserção de imagens e gráficos, que são fundamentais para ilustrar pontos e tornar o texto mais envolvente.\r\n\r\nOs cabeçalhos e rodapés são elementos importantes em documentos formais. Vamos ensinar como utilizá-los para incluir informações como o título do documento, data e números de página, garantindo que o leitor sempre tenha um contexto claro do que está lendo.\r\n\r\nAs referências também são essenciais, especialmente em documentos acadêmicos. Os alunos aprenderão a inserir notas de rodapé e citações corretamente, utilizando o recurso de referências do Word para garantir que todas as fontes sejam corretamente creditadas.\r\n\r\nUm recurso muito útil para documentos longos é a criação de sumários automáticos. Este recurso ajuda os leitores a navegar facilmente pelo documento, permitindo que encontrem rapidamente as seções de interesse. Vamos demonstrar como configurar um sumário e garantir que ele se atualize automaticamente à medida que o documento é editado.\r\n\r\nPor fim, abordaremos a utilização de seções para dividir o conteúdo de forma eficaz, permitindo que diferentes partes do documento tenham diferentes formatações, como margens e orientação de página.', '\r\n1 - Criação de um Documento Formal: Os alunos devem criar um documento de apresentação, utilizando cabeçalhos, rodapés, tabelas e imagens para torná-lo mais profissional. O documento deve incluir pelo menos uma tabela e uma imagem.\r\n\r\n2 - Formatação de Referências: Produza um documento acadêmico que inclua pelo menos três notas de rodapé e duas citações. Utilize o recurso de referências para gerenciar as citações corretamente.\r\n\r\n3 - Sumário Automático: Crie um documento de pesquisa com várias seções e insira um sumário automático. Certifique-se de que o sumário se atualize corretamente após adicionar ou remover seções.', 'https://www.youtube.com/watch?v=pfUnnEKSn2g'),
	(33, 77, 'Aula 1: A História da Informática – Da Máquina de', 'Nesta aula, vamos explorar a fascinante trajetória da Informática, uma área que transformou radicalmente a sociedade nas últimas décadas. Desde os primeiros dispositivos mecânicos até os supercomputadores modernos, a evolução da Informática é marcada por descobertas, inovações e grandes pensadores. O objetivo desta aula é oferecer uma visão geral sobre os principais marcos históricos da informática, destacando os eventos e personagens que moldaram a tecnologia como a conhecemos hoje.', 'Iniciaremos com uma discussão sobre os primórdios da computação, começando com os primeiros dispositivos de cálculo, como o ábaco e a máquina de Pascal. Em seguida, abordaremos o impacto da Máquina de Turing, proposta pelo matemático Alan Turing, e como essa ideia abstrata lançou as bases para o conceito de computação moderna.\r\n\r\nVeremos a ascensão dos primeiros computadores eletrônicos durante a Segunda Guerra Mundial, como o ENIAC, que inauguraram a era dos grandes sistemas de processamento. Discutiremos também a evolução dos transistores e circuitos integrados, que foram cruciais para a miniaturização dos computadores e a disseminação do uso pessoal.\r\n\r\nAlém dos avanços tecnológicos, também exploraremos o papel da Internet, que começou como um projeto militar, mas logo se expandiu para conectar pessoas e sistemas em escala global. Vamos analisar como a Web revolucionou a comunicação e deu origem à era da informação.\r\n\r\nPor fim, falaremos sobre os impactos da informática no mundo moderno, com a chegada de smartphones, inteligência artificial, e big data, áreas que continuam a moldar o futuro da humanidade.\r\nA história da informática começa muito antes dos computadores modernos, remontando aos primeiros instrumentos de cálculo criados por civilizações antigas. Ferramentas como o ábaco eram usadas para realizar operações matemáticas básicas. No século XVII, Blaise Pascal criou a “Pascalina”, uma máquina de calcular mecânica, dando um dos primeiros passos rumo à automação do cálculo.\r\n\r\nNo século XX, Alan Turing, considerado o pai da computação moderna, apresentou o conceito da Máquina de Turing, uma máquina teórica que podia realizar qualquer cálculo matemático. Esse modelo abstrato formou a base para o desenvolvimento da computação que conhecemos hoje.\r\n\r\nDurante a Segunda Guerra Mundial, os primeiros computadores eletrônicos, como o ENIAC, foram desenvolvidos para ajudar nas operações militares, realizando cálculos complexos em alta velocidade. Esses computadores gigantes ocupavam salas inteiras, mas sua criação abriu o caminho para a computação moderna.\r\n\r\nO advento dos transistores na década de 1950 e dos circuitos integrados nos anos 1960 permitiu que os computadores ficassem menores e mais acessíveis. Empresas como IBM começaram a produzir computadores comerciais, e nas décadas seguintes, a computação se tornou essencial para negócios e instituições.\r\n\r\nNa década de 1980, os computadores pessoais (PCs) começaram a se popularizar, com empresas como Apple e Microsoft tornando a informática acessível a milhões de pessoas. Paralelamente, a criação da Internet nos anos 1960, inicialmente restrita ao ambiente militar, começou a conectar universidades e, eventualmente, o mundo todo.\r\n\r\nNos anos 1990, com a criação da World Wide Web, o acesso à informação se expandiu de maneira exponencial, revolucionando a forma como as pessoas se comunicam e compartilham conhecimento. Hoje, a informática não se limita a desktops e laptops – estamos vivendo a era dos smartphones, inteligência artificial e big data, onde a tecnologia permeia todos os aspectos da vida cotidiana.', '1 - Linha do Tempo: Crie uma linha do tempo com os principais eventos da história da informática, desde os primeiros dispositivos de cálculo até os dias atuais. Inclua marcos como a criação da Máquina de Turing, ENIAC, a invenção dos transistores, e a popularização da Internet.\r\n\r\n2 - Pesquisa sobre Alan Turing: Faça uma breve pesquisa sobre a vida e o legado de Alan Turing. Escreva um texto de 500 palavras destacando suas contribuições para a computação moderna e o impacto de seu trabalho na tecnologia atual.\r\n\r\n3 - Comparação entre Computadores: Compare os primeiros computadores da década de 1940, como o ENIAC, com os computadores modernos. O que mudou em termos de tamanho, potência, e acessibilidade? Faça um relatório destacando essas diferenças e o impacto da miniaturização dos computadores.', 'https://www.youtube.com/watch?v=1OX2XBFlHDk'),
	(34, 78, 'Introdução à Segurança da Informação', 'Nesta aula, abordaremos os conceitos fundamentais da Segurança da Informação, incluindo sua importância no cenário atual, as ameaças mais comuns e as práticas essenciais para proteger informações sensíveis. Serão discutidos os princípios de confidencialidade, integridade e disponibilidade, além da evolução da segurança em um mundo digital.', 'A Segurança da Informação pode ser definida como um conjunto de práticas e tecnologias que visam proteger informações e sistemas de informação contra acesso não autorizado, uso, divulgação, interrupção, modificação ou destruição. É fundamental compreender os objetivos da segurança, que se resumem em três pilares principais: confidencialidade, integridade e disponibilidade.\r\n\r\nConfidencialidade refere-se à proteção das informações contra acesso não autorizado. É o princípio que assegura que apenas pessoas autorizadas possam acessar dados sensíveis. Integridade, por sua vez, diz respeito à garantia de que as informações não sejam alteradas de forma não autorizada, assegurando sua precisão e consistência ao longo do tempo. Por fim, a disponibilidade garante que as informações estejam acessíveis e utilizáveis quando necessário, evitando interrupções que possam afetar operações críticas.\r\n\r\nNo atual ambiente digital, as ameaças à segurança da informação são diversas e em constante evolução. Entre as ameaças mais comuns, encontramos o malware, o phishing e a engenharia social. Exemplos de incidentes de segurança que tiveram grande repercussão mostram o impacto devastador que falhas de segurança podem causar em organizações, resultando em perdas financeiras e danos à reputação.\r\n\r\nPara prevenir tais incidentes, é essencial adotar princípios de segurança, como o princípio do menor privilégio, que estabelece que os usuários devem ter acesso apenas às informações necessárias para o desempenho de suas funções. A defensiva em camadas envolve a implementação de múltiplas medidas de segurança para proteger informações, enquanto a atualização e manutenção regulares dos sistemas garantem que as vulnerabilidades conhecidas sejam corrigidas.\r\n\r\nPara finalizar, algumas práticas recomendadas podem ajudar a fortalecer a segurança da informação. A criação de senhas fortes e a gestão eficaz delas são fundamentais para proteger contas e dados. Além disso, a conscientização dos funcionários sobre as melhores práticas de segurança e a implementação de políticas robustas de segurança da informação são essenciais para criar uma cultura de segurança em qualquer organização.', 'Qual é o principal objetivo da confidencialidade na Segurança da Informação?\r\n\r\nA) Garantir que as informações sejam mantidas em sua forma original.\r\nB) Proteger as informações contra acesso não autorizado.\r\nC) Assegurar que as informações estejam disponíveis sempre que necessário.\r\nD) Manter registros de todas as transações realizadas.\r\n\r\nO que significa o princípio do menor privilégio?\r\n\r\nA) Todos os usuários devem ter acesso total a todas as informações.\r\nB) Usuários devem ter acesso apenas às informações necessárias para suas funções.\r\nC) A segurança deve ser garantida por uma única camada de proteção.\r\nD) Os privilégios devem ser concedidos sem restrições.\r\n\r\nQual das opções abaixo é um exemplo de ameaça à Segurança da Informação?\r\n\r\nA) Criação de senhas fortes.\r\nB) Uso de autenticação em duas etapas.\r\nC) Malware.\r\nD) Políticas de segurança da informação.\r\n\r\nO que representa a integridade na Segurança da Informação?\r\n\r\nA) O acesso a informações apenas por pessoas autorizadas.\r\nB) A garantia de que as informações não foram alteradas de forma não autorizada.\r\nC) A disponibilidade das informações em todos os momentos.\r\nD) O registro de todas as interações com as informações.\r\n\r\nPor que a conscientização dos funcionários é importante na Segurança da Informação?\r\n\r\nA) Para garantir que todos usem o mesmo dispositivo.\r\nB) Para reduzir a necessidade de políticas de segurança.\r\nC) Para capacitar os funcionários a identificar e evitar ameaças.\r\nD) Para garantir que todos os dados sejam mantidos em papel.\r\n', 'https://www.youtube.com/watch?v=H2-fEbypIy8'),
	(35, 79, 'Introdução ao Python: Primeiros Passos', 'Nesta aula, você será introduzido à linguagem de programação Python, uma das mais populares e versáteis do mundo. Abordaremos o ambiente de desenvolvimento, a sintaxe básica e os conceitos fundamentais que formarão a base para seu aprendizado em programação. Você aprenderá a criar seu primeiro programa e entenderá como a estrutura do Python facilita a escrita e a leitura de códigos.', 'Nesta aula, começaremos por instalar o Python e configurar o ambiente de desenvolvimento em seu computador. Você aprenderá a usar o interpretador Python e um editor de código, como o Visual Studio Code ou o PyCharm.\r\n\r\nEm seguida, abordaremos os conceitos básicos da linguagem, incluindo a sintaxe, variáveis e tipos de dados. Você descobrirá como declarar variáveis e trabalhar com diferentes tipos, como inteiros, floats, strings e listas.\r\n\r\nA seguir, exploraremos as estruturas de controle, como condicionais (if, else) e loops (for, while), que são fundamentais para a lógica de programação. Você verá como essas estruturas permitem que seu código tome decisões e repita ações com base em condições específicas.\r\n\r\nFinalmente, você criará seu primeiro programa em Python, que realizará uma tarefa simples, como calcular a soma de dois números fornecidos pelo usuário. Isso ajudará a solidificar seu entendimento sobre os conceitos abordados.', 'Qual é a primeira etapa para começar a programar em Python?\r\n\r\nA) Aprender sobre estruturas de dados.\r\nB) Instalar o Python e configurar o ambiente de desenvolvimento.\r\nC) Criar um projeto complexo.\r\nD) Escrever um código sem entender os conceitos básicos.\r\n\r\nQual das opções abaixo é um tipo de dado em Python?\r\n\r\nA) Texto\r\nB) Lista\r\nC) Número inteiro\r\nD) Todas as anteriores\r\n\r\nO que faz a instrução if em um código Python?\r\n\r\nA) Permite que o código execute um loop.\r\nB) Cria uma nova função.\r\nC) Executa um bloco de código somente se uma condição for verdadeira.\r\nD) Declara uma variável.\r\n\r\nQual é a saída do seguinte código?\r\n_______________________\r\n| numero = 5          |\r\n| if numero % 2 == 0: |\r\n|   print("Par")      |\r\n| else:               |\r\n|   print("Ímpar")    |\r\n-----------------------\r\nA) Par\r\nB) Ímpar\r\nC) Erro de Sintaxe\r\nD) Nenhuma saída\r\n\r\nO que a função input() faz em Python?\r\n\r\nA) Lê dados de um arquivo.\r\nB) Pede ao usuário que insira dados e retorna como uma string.\r\nC) Executa um comando do sistema.\r\nD) Cria uma variável.\r\n\r\n', 'https://www.youtube.com/watch?v=S9uPNppGsGo&list=PLvE-ZAFRgX8hnECDn1v9HNTI71veL3oW0'),
	(37, 81, 'Fundamentos do Hardware de Computadores', 'Nesta aula, você será apresentado aos componentes essenciais que compõem um computador, entendendo suas funções e como eles interagem entre si. Discutiremos a importância de cada parte e como elas colaboram para o funcionamento do sistema. Ao final da aula, você terá uma visão clara da estrutura de um computador e das funções de cada componente.', 'Começaremos com uma visão geral sobre o que é um computador e como ele opera. Um computador é uma máquina eletrônica projetada para processar dados, que consiste em uma combinação de hardware e software. O hardware refere-se aos componentes físicos que compõem o sistema, enquanto o software são os programas que executam tarefas específicas.\r\n\r\nDentre os componentes essenciais de um computador, o primeiro a ser destacado é o processador, conhecido como CPU (Unidade Central de Processamento). A CPU é muitas vezes considerada o "cérebro" do computador, pois é responsável por executar instruções e processar dados. Sua velocidade e eficiência são cruciais para o desempenho geral do sistema.\r\n\r\nA placa-mãe é outro componente fundamental, atuando como a espinha dorsal do computador. É nela que todos os outros componentes se conectam, permitindo a comunicação entre eles. A placa-mãe contém slots para a CPU, memória RAM, placas de vídeo e outros dispositivos de armazenamento, além de oferecer conectividade com periféricos.\r\n\r\nFalando sobre a memória, a RAM (Memória de Acesso Aleatório) é responsável por armazenar dados temporariamente enquanto o computador está em uso. Isso permite que o processador acesse rapidamente as informações necessárias para executar programas e tarefas. A quantidade de RAM instalada em um sistema impacta diretamente sua capacidade de executar múltiplas tarefas simultaneamente.\r\n\r\nOs discos de armazenamento, como HDD (Disco Rígido) e SSD (Unidade de Estado Sólido), são onde os dados são armazenados permanentemente. Os HDDs são baseados em tecnologia mecânica, com discos giratórios, enquanto os SSDs utilizam memória flash, proporcionando velocidades de leitura e gravação muito mais rápidas e maior resistência a choques.\r\n\r\nA placa de vídeo, ou GPU (Unidade de Processamento Gráfico), é responsável pela renderização de gráficos e imagens. Este componente é especialmente importante para jogos e aplicativos de design gráfico, onde o desempenho visual é essencial.\r\n\r\nPor fim, a fonte de alimentação é o componente que fornece energia a todos os outros componentes do sistema. Uma boa fonte garante que todos os dispositivos recebam a energia necessária para operar de forma estável e eficiente.\r\n\r\nAo longo desta aula, você aprenderá não apenas sobre as funções individuais de cada um desses componentes, mas também como eles se interconectam e colaboram para o funcionamento geral do computador. Essa compreensão é vital para qualquer pessoa interessada em montar, atualizar ou solucionar problemas em sistemas de computação.', 'Qual é a função principal do processador (CPU) em um computador?\r\n\r\nA) Armazenar dados permanentemente.\r\nB) Executar instruções e processar dados.\r\nC) Controlar a energia do sistema.\r\nD) Renderizar gráficos e vídeos.\r\nQual componente é considerado a "espinha dorsal" de um computador?\r\n\r\nA) Disco rígido (HDD)\r\nB) Placa-mãe\r\nC) Memória RAM\r\nD) Placa de vídeo\r\n\r\nQual a principal diferença entre HDD e SSD?\r\n\r\nA) O SSD armazena dados de forma permanente, enquanto o HDD não.\r\nB) O SSD é mais rápido e resistente a choques do que o HDD.\r\nC) O HDD é mais caro que o SSD.\r\nD) O HDD não pode ser usado em laptops, enquanto o SSD pode.\r\n\r\nQual é a função da memória RAM em um sistema de computação?\r\n\r\nA) Armazenar dados a longo prazo.\r\nB) Processar gráficos.\r\nC) Armazenar dados temporariamente para acesso rápido.\r\nD) Fornecer energia aos componentes.\r\n\r\nQual componente é responsável pela renderização de gráficos em um computador?\r\n\r\nA) Processador (CPU)\r\nB) Placa de vídeo\r\nC) Memória RAM\r\nD) Disco rígido (HDD)', 'https://www.youtube.com/watch?v=CGDryR8fdHo'),
	(38, 82, 'Introdução ao Microsoft Outlook: Configurações Ini', 'Nesta aula, você será apresentado ao Microsoft Outlook, uma ferramenta essencial para gerenciar e-mails, compromissos e tarefas de forma eficiente. Vamos explorar as funcionalidades básicas do programa, desde as configurações iniciais até a navegação pela interface, permitindo que você aproveite ao máximo esta poderosa ferramenta de comunicação e produtividade.', 'O Microsoft Outlook é uma ferramenta versátil que não se limita apenas ao envio e recebimento de e-mails, mas também oferece funcionalidades que facilitam a organização de tarefas e compromissos. Para começar, é fundamental configurar o Outlook corretamente. Após a instalação, você deve adicionar sua conta de e-mail. O processo é simples: ao abrir o Outlook pela primeira vez, uma tela de configuração o guiará na inserção de seu endereço de e-mail e senha, permitindo que você conecte sua conta de forma rápida e segura.\r\n\r\nUma vez configurada a conta, você será recebido por uma interface que, embora rica em funcionalidades, é intuitiva. O painel de navegação à esquerda permite que você acesse suas pastas de e-mail, calendário, contatos e tarefas. A área central exibe os e-mails selecionados, permitindo uma visualização clara do conteúdo. Na parte superior, a faixa de opções oferece ferramentas para compor novos e-mails, gerenciar compromissos e muito mais.\r\n\r\nUma das principais funcionalidades do Outlook é a capacidade de organizar seus e-mails em pastas. Isso permite que você mantenha sua caixa de entrada limpa e acessível, facilitando a localização de mensagens importantes. Além disso, o Outlook oferece opções para marcar e categorizar e-mails, ajudando na priorização das mensagens.\r\n\r\nO calendário é outra ferramenta poderosa. Com ele, você pode agendar compromissos, reuniões e lembretes. O Outlook também permite o compartilhamento de calendários, facilitando a coordenação de compromissos com colegas. Utilizar essas funcionalidades é essencial para aumentar a eficiência no gerenciamento do tempo.\r\n\r\nPara concluir esta aula, é importante praticar o que você aprendeu. Familiarize-se com a interface, explore as funcionalidades de e-mail e calendário e experimente organizar seus dados de acordo com suas necessidades.', 'Qual é a função principal do Microsoft Outlook?\r\n\r\nA) Gerenciar projetos.\r\nB) Enviar e receber e-mails.\r\nC) Criar apresentações.\r\nD) Editar planilhas.\r\n\r\nO que é necessário para configurar sua conta de e-mail no Outlook?\r\n\r\nA) Um computador com Windows.\r\nB) Um endereço de e-mail e senha.\r\nC) Um antivírus instalado.\r\nD) Um servidor dedicado.\r\n\r\nQual é a finalidade do calendário no Microsoft Outlook?\r\n\r\nA) Criar gráficos.\r\nB) Gerenciar e-mails.\r\nC) Agendar compromissos e reuniões.\r\nD) Editar documentos.\r\n\r\nComo você pode organizar sua caixa de entrada no Outlook?\r\n\r\nA) Alterando a cor do fundo.\r\nB) Criando pastas e marcando e-mails.\r\nC) Enviando todos os e-mails para a lixeira.\r\nD) Aumentando o tamanho da fonte.\r\n\r\nO que a faixa de opções no Outlook permite que você faça?\r\n\r\nA) Alterar o layout do sistema operacional.\r\nB) Acessar ferramentas para compor e-mails, gerenciar compromissos, entre outros.\r\nC) Criar novos arquivos de imagem.\r\nD) Mudar o idioma do Windows.', 'https://www.youtube.com/watch?v=dlwg6L9NlEs&list=PLhlJ23eNBXh3pjzsx1yxOO9DAyfzVsN_t'),
	(42, 85, 'Aula 1: O que é Ciência de Dados?', 'Nesta aula, você será introduzido ao conceito de Ciência de Dados, seu escopo e aplicações. Com a explosão de dados gerados a cada dia, a Ciência de Dados tornou-se um campo crucial para transformar grandes volumes de informação em insights valiosos.', 'Ciência de Dados é a área de estudo que combina habilidades de estatística, programação e conhecimentos de domínio para extrair informações úteis de dados estruturados e não estruturados. Ela utiliza técnicas como aprendizado de máquina, análise estatística e processamento de grandes volumes de dados (Big Data) para gerar insights que podem ajudar na tomada de decisões. Hoje, a Ciência de Dados é aplicada em diversos setores, desde o marketing e vendas até a saúde e a tecnologia, revolucionando a maneira como as empresas operam e tomam decisões. Nesta aula, discutiremos a evolução do campo, as ferramentas mais usadas e a crescente demanda por cientistas de dados no mercado de trabalho.', 'Pesquise uma aplicação real de Ciência de Dados em qualquer setor e explique como ela é utilizada.\r\n\r\nDescreva o papel de um cientista de dados em um projeto de análise de dados.', 'https://www.youtube.com/watch?v=Iuz_jc96bQk&list=PLh2Y_pKOa4Udq6kx9Y_jFbLG9tpYrIKJ5'),
	(43, 85, 'Aula 2: Coleta e Preparação de Dados', 'Nesta aula, aprenderemos como realizar a coleta de dados, entender os tipos de dados disponíveis e preparar esses dados para análise. A qualidade dos dados é fundamental para obter bons resultados na Ciência de Dados.', 'A coleta de dados é o primeiro passo em qualquer projeto de Ciência de Dados. Os dados podem ser coletados de fontes como bancos de dados, APIs, arquivos CSV, ou mesmo de maneira manual. Depois de coletados, os dados precisam ser limpos e transformados para garantir sua consistência e usabilidade. Esse processo envolve a remoção de valores nulos, tratamento de dados duplicados e a normalização dos dados para que estejam prontos para serem analisados. Durante esta aula, exploraremos algumas das principais ferramentas e linguagens de programação usadas para coleta e preparação de dados, como Python, Pandas e SQL.', 'Baixe um conjunto de dados público e faça a limpeza e preparação desse conjunto utilizando Python e Pandas.\r\n\r\nExplique por que a etapa de preparação de dados é fundamental para o sucesso de um projeto de Ciência de Dados.', 'https://www.youtube.com/watch?v=8VwLb7M-5-g'),
	(44, 86, 'Aula 1: O que é Inteligência Artificial?', 'Nesta aula, você será introduzido ao conceito de Inteligência Artificial (IA), suas origens e as principais áreas de aplicação. A IA tem impactado inúmeras indústrias e é um dos campos mais promissores da tecnologia.', 'Inteligência Artificial refere-se à capacidade de máquinas realizarem tarefas que normalmente requerem inteligência humana, como reconhecimento de fala, tomada de decisões e resolução de problemas. A IA engloba diversas subáreas, como aprendizado de máquina, redes neurais artificiais, processamento de linguagem natural e visão computacional. Com o avanço da IA, sistemas autônomos e automação inteligente têm se tornado mais comuns em setores como saúde, finanças, logística e até na vida cotidiana. Nesta aula, você aprenderá como os modelos de IA são desenvolvidos, suas aplicações práticas e a diferença entre IA forte e fraca.', 'Identifique uma aplicação de IA que você utiliza em seu dia a dia e explique como ela funciona.\r\n\r\nPesquise sobre a história da IA e descreva um marco importante no seu desenvolvimento.', 'https://www.youtube.com/watch?v=xNLZNgXYaK8'),
	(45, 87, 'Aula 1: O que é o Scratch?', 'Nesta aula, você será apresentado à plataforma Scratch, uma linguagem de programação visual desenvolvida pelo MIT. O Scratch é uma ferramenta educativa que permite a criação de histórias interativas, jogos e animações, facilitando o aprendizado de conceitos de programação de forma lúdica e acessível para iniciantes.', 'O Scratch é uma linguagem baseada em blocos que permite programar de maneira intuitiva e visual, arrastando e conectando blocos de código. Ele foi criado com o objetivo de tornar a programação acessível a crianças e iniciantes, permitindo que entendam como funcionam conceitos básicos como loops, variáveis, condições e eventos. Na plataforma, os usuários podem criar seus próprios projetos e compartilhá-los com a comunidade. Durante esta aula, faremos uma breve demonstração de como criar uma conta no Scratch, explorar a interface e criar nosso primeiro projeto simples: mover um personagem (sprite) na tela.', 'O Scratch é uma linguagem de programação desenvolvida para:\r\na) Programadores experientes\r\nb) Crianças e iniciantes\r\nc) Robôs industriais\r\nd) Análise de dados avançada\r\n\r\n\r\nQual é o principal recurso que diferencia o Scratch de outras linguagens de programação?\r\na) Programação orientada a objetos\r\nb) Utilização de comandos textuais complexos\r\nc) Programação através de blocos visuais\r\nd) Criação automática de sites\r\n', 'https://www.youtube.com/watch?v=b0LWjZoU_dA&list=PLUA91x6QVggBDCGdzaeauvqv41aZsEBZN'),
	(46, 87, 'Aula 2: Primeiros Passos – Criando um Projeto no S', 'Nesta aula, vamos explorar o processo de criação de um projeto no Scratch. Você aprenderá a adicionar personagens (sprites), cenários, e a usar os blocos de movimento para controlar o comportamento dos elementos na tela.', 'Criar um projeto no Scratch é simples. O primeiro passo é escolher um sprite, que pode ser um dos personagens disponíveis na biblioteca do Scratch ou um criado por você. Em seguida, selecionamos um cenário, que funciona como o fundo da nossa animação ou jogo. Usamos blocos de código da categoria "Movimento" para controlar a direção, a rotação e a posição do sprite na tela. Vamos criar um projeto básico em que um personagem se move de um lado para o outro quando as setas do teclado são pressionadas.', 'Para que serve o sprite no Scratch?\r\na) Para definir o fundo da tela\r\nb) Para criar a música de fundo\r\nc) Para representar personagens ou objetos\r\nd) Para fazer cálculos matemáticos\r\n \r\n\r\nO que acontece quando conectamos blocos de "Movimento" ao sprite?\r\na) Ele muda de cor\r\nb) Ele emite sons\r\nc) Ele se move pela tela\r\nd) Ele desaparece', 'https://www.youtube.com/watch?v=C4p_ASVYnZM'),
	(47, 88, 'Aula 1: Usando Loops no Scratch', 'Nesta aula, vamos aprender sobre loops (repetições), um dos conceitos fundamentais da programação. Loops são usados para repetir ações automaticamente, economizando tempo e esforço. No Scratch, o uso de blocos como "repita" e "sempre" facilita a criação de ciclos de ações.', 'Os loops são uma maneira eficiente de repetir comandos várias vezes sem a necessidade de escrever os mesmos blocos de código várias vezes. No Scratch, o bloco "repita" permite definir um número fixo de repetições, enquanto o bloco "sempre" faz com que o código dentro dele seja executado continuamente até que o programa seja interrompido. Vamos criar um projeto em que um personagem repete uma sequência de movimentos utilizando um loop de 10 repetições. Em seguida, veremos um exemplo prático de como loops podem ser usados para animar um sprite que anda em círculos na tela.', 'Qual bloco do Scratch permite repetir uma ação por um número determinado de vezes?\r\na) "Sempre"\r\nb) "Repita"\r\nc) "Espere"\r\nd) "Mude cor"\r\n\r\n\r\nO que acontece quando usamos o bloco "sempre" em um projeto?\r\na) O sprite desaparece após algumas execuções\r\nb) O código dentro do bloco é executado infinitamente\r\nc) O programa é pausado\r\nd) O sprite muda de tamanho automaticamente', 'https://www.youtube.com/watch?v=OQMc6XpQtfc&list=PLNa5V12lHXCwoDQaU2PINEXk_YUI89Fik'),
	(48, 89, 'Aula 1: O que são Microcontroladores?', 'Nesta aula, você será introduzido aos microcontroladores, componentes eletrônicos essenciais em sistemas embarcados. Vamos explorar como funcionam, suas aplicações no cotidiano e a importância no desenvolvimento de dispositivos eletrônicos programáveis.', 'Microcontroladores são circuitos integrados que contêm um processador, memória e periféricos de entrada e saída em um único chip. Eles são amplamente usados em dispositivos eletrônicos, como eletrodomésticos, brinquedos, automóveis e dispositivos médicos. Esses chips são programáveis e controlam tarefas específicas, como ligar e desligar componentes ou medir sensores. Nesta aula, discutiremos a arquitetura básica de um microcontrolador e sua relação com o desenvolvimento de projetos eletrônicos.', 'Um microcontrolador pode ser descrito como:\r\na) Um processador especializado em tarefas gráficas\r\nb) Um chip programável que controla tarefas específicas\r\nc) Um sensor de temperatura avançado\r\nd) Um tipo de armazenamento de dados\r\n\r\n\r\nQual das opções abaixo é um exemplo comum de um dispositivo que contém um microcontrolador?\r\na) Computador pessoal\r\nb) Televisão\r\nc) Máquina de lavar\r\nd) Teclado musical', 'https://www.youtube.com/watch?v=RmhdSK1tAvc'),
	(49, 90, 'Aula 1: O que é Arduino?', 'Nesta aula, você será introduzido ao Arduino, uma plataforma de hardware livre que facilita o desenvolvimento de projetos eletrônicos interativos. Veremos a importância do Arduino na popularização da robótica e da automação entre entusiastas e profissionais.', 'Arduino é uma plataforma composta por placas de desenvolvimento baseadas em microcontroladores, projetada para facilitar a criação de dispositivos interativos. Através do ambiente de programação Arduino IDE, os usuários podem programar as placas para controlar sensores, motores e outros dispositivos. O Arduino é amplamente utilizado em projetos educacionais, makers e industriais devido à sua simplicidade e flexibilidade. Nesta aula, exploraremos a história do Arduino, suas aplicações e como começar a utilizar essa plataforma em seus próprios projetos.', 'O Arduino é mais comumente utilizado para:\r\na) Construir computadores pessoais\r\nb) Desenvolver aplicativos móveis\r\nc) Criar projetos eletrônicos interativos\r\nd) Executar cálculos matemáticos complexos\r\n\r\n\r\nQual das opções abaixo descreve o Arduino IDE?\r\na) Um tipo de microcontrolador avançado\r\nb) Um software utilizado para programar placas Arduino\r\nc) Uma linguagem de programação baseada em blocos\r\nd) Um simulador de circuitos eletrônicos', 'https://www.youtube.com/watch?v=sv9dDtYnE1g'),
	(50, 91, 'Aula 1: Introdução à Programação', 'Programação é a base da tecnologia moderna. Trata-se do processo de criação de softwares e sistemas que controlam máquinas, dispositivos e até serviços que utilizamos diariamente, como redes sociais, aplicativos de transporte e sistemas bancários. A programação envolve o uso de linguagens específicas para comunicar instruções claras e lógicas aos computadores. Este primeiro contato tem como objetivo mostrar os conceitos básicos, sua aplicação prática e despertar o interesse por esta área fascinante.', 'Quando falamos em programação, estamos nos referindo a um conjunto de técnicas e ferramentas que permitem a criação de programas de computador. A essência da programação está na lógica: a habilidade de organizar ideias de forma sequencial, resolver problemas e prever os resultados esperados. Essa lógica, combinada ao uso de linguagens de programação, como Python, Java ou C++, nos permite dar instruções aos computadores para que executem tarefas específicas.\r\n\r\nUm programa nada mais é do que uma sequência de comandos que, juntos, resolvem um problema ou automatizam um processo. Imagine, por exemplo, um aplicativo que organiza suas despesas mensais. Por trás dessa funcionalidade simples, há uma lógica que coleta, organiza e exibe informações com base nos dados inseridos pelo usuário. Sem a programação, o computador seria apenas uma máquina inerte, incapaz de executar qualquer operação de forma autônoma.\r\n\r\nAlém disso, a programação não está restrita a um único campo. Ela permeia diversas áreas, desde o desenvolvimento de softwares empresariais até a criação de jogos, sites e aplicativos de inteligência artificial. Ao dominar os fundamentos, você abre portas para oportunidades ilimitadas de inovação. Um bom programador é, antes de tudo, um solucionador de problemas, alguém que enxerga desafios como possibilidades de criar algo novo.\r\n\r\nAo longo deste curso, você aprenderá a criar seus próprios programas, compreenderá a importância da lógica e desenvolverá um pensamento estruturado, capaz de transformar ideias em soluções concretas. Este é o ponto de partida para sua jornada no mundo da tecnologia, onde cada código escrito pode ser um passo rumo à criação de algo extraordinário.', '1. Qual é o principal objetivo da programação?\r\na) Criar sites automaticamente\r\nb) Traduzir problemas em soluções para máquinas\r\nc) Fazer computadores aprenderem sozinhos\r\nd) Desenvolver jogos diretamente\r\n\r\n\r\n2. O que é um programa?\r\na) Uma sequência lógica de passos que resolve um problema\r\nb) Um dispositivo que executa comandos automaticamente\r\nc) Uma linguagem de programação específica\r\nd) Um sistema operacional utilizado por computadores\r\n\r\n\r\n3. Qual das opções abaixo é um exemplo de linguagem de programação?\r\na) HTML\r\nb) Python\r\nc) CSS\r\nd) JSON\r\n\r\n\r\n4. O que é um algoritmo?\r\na) Um tipo de linguagem de programação\r\nb) Uma sequência lógica de instruções para resolver um problema\r\nc) Uma ferramenta usada para compilar programas\r\nd) Um software utilizado para criar sistemas operacionais\r\n\r\n\r\n5. Qual é o papel da lógica de programação?\r\na) Estabelecer conexões entre dispositivos eletrônicos\r\nb) Organizar ideias e criar soluções estruturadas\r\nc) Traduzir códigos binários para linguagens compreensíveis\r\nd) Executar tarefas automaticamente\r\n\r\n\r\n6. O que é essencial para começar a programar?\r\na) Conhecimento profundo de hardware\r\nb) Domínio de algoritmos e lógica\r\nc) Saber usar ferramentas gráficas\r\nd) Conectar-se a servidores específicos\r\n\r\n\r\n7. Qual dos itens abaixo não é um exemplo de linguagem de programação?\r\na) JavaScript\r\nb) Python\r\nc) SQL\r\nd) Photoshop\r\n\r\n\r\n8. Qual é o primeiro passo no desenvolvimento de um programa?\r\na) Escrever o código final\r\nb) Criar o algoritmo\r\nc) Testar o hardware\r\nd) Configurar o sistema operacional\r\n\r\n\r\n9. Qual das áreas abaixo pode ser beneficiada pela programação?\r\na) Medicina\r\nb) Educação\r\nc) Automação industrial\r\nd) Todas as anteriores\r\n\r\n\r\n10. Qual é o objetivo principal deste curso?\r\na) Tornar o aluno um desenvolvedor completo\r\nb) Ensinar os fundamentos da lógica e da programação\r\nc) Criar programas avançados imediatamente\r\nd) Aprender apenas uma linguagem específica', 'https://www.youtube.com/watch?v=vvThhk2btO8'),
	(51, 91, 'Aula 2: Variáveis e Tipos de Dados', 'Na programação, as variáveis são usadas para armazenar dados temporários que podem ser manipulados durante a execução de um programa. Elas são fundamentais para armazenar e gerenciar informações, como números, texto, valores lógicos (verdadeiro ou falso) e mais. Entender como funcionam as variáveis é um dos primeiros passos para se tornar um bom programador, pois elas permitem que você crie programas dinâmicos e interativos.\r\n\r\nCada variável tem um tipo de dado, o que define que tipo de informação ela pode armazenar. Em linguagens como Python, JavaScript ou C++, os tipos de dados comuns incluem inteiros, strings (texto), booleans (verdadeiro ou falso), e outros tipos mais complexos, como listas e dicionários. Cada tipo de dado tem suas características e métodos para manipulação.', 'Em linguagens de programação, as variáveis são declaradas e iniciadas com um nome e um tipo de dado. O nome deve ser representativo do que será armazenado na variável, por exemplo, uma variável para armazenar a idade de uma pessoa pode ser chamada de idade. O tipo de dado é a especificação de que tipo de valor ela poderá armazenar, como int para números inteiros ou string para textos.\r\n\r\nNo caso de tipos numéricos, como inteiros e decimais, eles permitem armazenar valores como 10 ou 3.14, respectivamente. Já as strings são usadas para armazenar sequências de caracteres, como palavras e frases. O tipo booleano armazena apenas dois valores possíveis: verdadeiro ou falso. Isso é muito útil para tomada de decisões dentro de um programa, como verificar se uma condição é verdadeira ou falsa.\r\n\r\nO conceito de escopo das variáveis também é importante. O escopo determina onde uma variável pode ser acessada ou modificada dentro do código. Variáveis globais podem ser acessadas em qualquer parte do código, enquanto variáveis locais são limitadas a um bloco específico, como dentro de uma função.\r\n\r\nAlém disso, existem operadores que ajudam a manipular e combinar variáveis. A soma de duas variáveis inteiras ou a concatenação de duas strings são exemplos de operações que utilizam variáveis. A compreensão do uso de variáveis e tipos de dados é crucial para a construção de programas mais elaborados.', 'O que é uma variável em programação?\r\na) Um tipo de dado que pode armazenar números inteiros.\r\nb) Um espaço na memória para armazenar dados temporários.\r\nc) Uma linguagem de programação usada para criar programas.\r\nd) Um comando que verifica se uma condição é verdadeira.\r\n\r\nQual é a principal diferença entre tipos de dados numéricos inteiros e decimais?\r\na) Inteiros armazenam números com casas decimais, enquanto decimais não.\r\nb) Inteiros armazenam apenas números inteiros, enquanto decimais podem armazenar valores com casas decimais.\r\nc) Não há diferença entre eles.\r\nd) Decimais são usados apenas para texto.\r\n\r\nO que significa o tipo de dado booleano?\r\na) Um tipo que armazena números inteiros.\r\nb) Um tipo que armazena apenas dois valores: verdadeiro ou falso.\r\nc) Um tipo que armazena textos.\r\nd) Um tipo que armazena números decimais.\r\n\r\nQual operador você usaria para somar duas variáveis de tipo inteiro?\r\na) =\r\nb) +\r\nc) -\r\nd) *\r\n\r\nQual é a função de uma variável do tipo string?\r\na) Armazenar valores numéricos.\r\nb) Armazenar um único caractere.\r\nc) Armazenar uma sequência de caracteres, como palavras e frases.\r\nd) Armazenar valores lógicos (verdadeiro ou falso).\r\n\r\nQual é a diferença entre uma variável global e uma variável local?\r\na) Variáveis globais são acessíveis apenas dentro de funções.\r\nb) Variáveis locais podem ser acessadas de qualquer parte do programa.\r\nc) Variáveis globais podem ser acessadas de qualquer parte do código, enquanto variáveis locais são limitadas a um bloco específico de código.\r\nd) Não há diferença entre elas.\r\n\r\nComo você declararia uma variável para armazenar a idade de uma pessoa em Python?\r\na) idade = 25\r\nb) int idade = 25\r\nc) idade : 25\r\nd) let idade = 25\r\n\r\nQual tipo de dado seria mais apropriado para armazenar uma resposta de "sim" ou "não"?\r\na) int\r\nb) booleano\r\nc) string\r\nd) float\r\n\r\nComo concatenar duas strings em Python?\r\na) string1 + string2\r\nb) string1.concat(string2)\r\nc) string1 * string2\r\nd) string1.merge(string2)\r\n\r\nO que aconteceria se você tentasse armazenar um valor decimal em uma variável do tipo inteiro?\r\na) O programa exibiria um erro de sintaxe.\r\nb) O valor decimal seria arredondado automaticamente para o número inteiro mais próximo.\r\nc) O programa seria executado normalmente, mas o valor decimal seria perdido.\r\nd) Não aconteceria nada, pois o tipo de dado int pode armazenar valores decimais.', 'https://www.youtube.com/watch?v=FmTO2EPatZQ'),
	(52, 91, 'Aula 3: Estruturas Condicionais', 'As estruturas condicionais são fundamentais para que um programa tome decisões baseadas em condições. Elas permitem que o fluxo de execução de um programa seja alterado dependendo dos valores das variáveis ou das condições que são avaliadas. Em outras palavras, as estruturas condicionais ajudam a controlar o comportamento de um programa, permitindo que ele execute diferentes blocos de código com base em diferentes situações.', 'Vamos explorar os tipos mais comuns de estruturas condicionais:\r\n\r\nif: Verifica uma condição e executa um bloco de código caso essa condição seja verdadeira.\r\n\r\npython\r\nCopiar código\r\nif condição:\r\n    # código a ser executado se a condição for verdadeira\r\nelse: Define o que deve ser feito caso a condição do if seja falsa.\r\n\r\npython\r\nCopiar código\r\nif condição:\r\n    # código a ser executado se a condição for verdadeira\r\nelse:\r\n    # código a ser executado se a condição for falsa\r\nelif: Permite verificar múltiplas condições, uma após a outra.\r\n\r\npython\r\nCopiar código\r\nif condição1:\r\n    # código se condição1 for verdadeira\r\nelif condição2:\r\n    # código se condição2 for verdadeira\r\nelse:\r\n    # código se nenhuma das condições for verdadeira\r\nOperadores Lógicos:\r\n\r\nand: A condição será verdadeira se todas as subcondições forem verdadeiras.\r\nor: A condição será verdadeira se pelo menos uma das subcondições for verdadeira.\r\nnot: Inverte o valor lógico de uma condição.\r\nExemplo de uso:\r\n\r\npython\r\nidade = 18\r\nif idade >= 18:\r\n    print("Você é maior de idade")\r\nelse:\r\n    print("Você é menor de idade")\r\n\r\nA estrutura condicional mais simples é o if, que permite que o código dentro de um bloco seja executado somente se uma condição for verdadeira. Em alguns casos, podemos usar o else para definir um comportamento alternativo quando a condição não for atendida. Também podemos usar o elif para definir múltiplas condições a serem verificadas, caso a anterior não tenha sido verdadeira.\r\n\r\nAlém disso, é importante compreender a lógica por trás dos operadores que usamos nas condições, como operadores de comparação (==, !=, <, >, <=, >=) e operadores lógicos (and, or, not). Essas ferramentas são fundamentais para a construção de programas inteligentes que podem se adaptar às mais diversas situações.', 'Qual é a função de uma estrutura condicional em um programa?\r\na) Permitir a execução de código repetido.\r\nb) Alterar o fluxo de execução do programa com base em uma condição.\r\nc) Armazenar informações temporárias.\r\nd) Organizar o código em blocos.\r\n\r\nQual é a sintaxe correta para uma estrutura if em Python?\r\na) if condição { código }\r\nb) if (condição) { código }\r\nc) if (condição): código\r\nd) if condição: código\r\n\r\nO que acontece quando uma condição if é falsa e não há um else ou elif?\r\na) O programa irá continuar a execução normalmente.\r\nb) O código dentro do bloco if será executado de qualquer forma.\r\nc) O programa vai gerar um erro de sintaxe.\r\nd) Nenhuma ação será executada para aquela condição.\r\n\r\nEm uma estrutura elif, qual é a diferença em relação ao else?\r\na) O elif executa o código dentro do bloco se a condição for verdadeira, enquanto o else executa se a condição for falsa.\r\nb) O elif serve para definir múltiplas condições a serem verificadas, enquanto o else serve para um único caso.\r\nc) O elif e o else são a mesma coisa.\r\nd) O elif executa o código se a condição for falsa, enquanto o else executa se a condição for verdadeira.\r\n\r\nQual operador lógico seria mais adequado para verificar se a pessoa tem entre 18 e 65 anos?\r\na) and\r\nb) or\r\nc) not\r\nd) Nenhum operador lógico é necessário.\r\n\r\nO que significa o operador de comparação != em Python?\r\na) Verifica se duas variáveis são iguais.\r\nb) Verifica se duas variáveis não são iguais.\r\nc) Verifica se uma variável é maior que outra.\r\nd) Verifica se uma variável é menor que outra.\r\n\r\nO que será impresso no seguinte código?\r\n\r\npython\r\nCopiar código\r\nidade = 20\r\nif idade >= 18:\r\n    print("Maior de idade")\r\nelse:\r\n    print("Menor de idade")\r\na) "Maior de idade"\r\nb) "Menor de idade"\r\nc) "Maior"\r\nd) Não será impresso nada.\r\n\r\nQual operador lógico você usaria para verificar se duas condições são ambas verdadeiras ao mesmo tempo?\r\na) not\r\nb) or\r\nc) and\r\nd) !=\r\n\r\nEm qual situação você utilizaria o operador else?\r\na) Quando há mais de uma condição a ser verificada.\r\nb) Quando você deseja executar uma ação apenas se a condição anterior for falsa.\r\nc) Quando você deseja executar uma ação somente quando a condição for verdadeira.\r\nd) Quando você precisa fazer uma verificação sem usar uma condição.\r\n\r\nO que aconteceria se o código seguinte fosse executado?\r\n\r\npython\r\nCopiar código\r\nx = 10\r\nif x > 5:\r\n    print("X é maior que 5")\r\nelif x > 10:\r\n    print("X é maior que 10")\r\nelse:\r\n    print("X é igual a 10")\r\na) "X é maior que 5" será impresso.\r\nb) "X é maior que 10" será impresso.\r\nc) "X é igual a 10" será impresso.\r\nd) Nenhuma mensagem será impressa.', 'https://www.youtube.com/watch?v=oWuwfNMwXeY'),
	(53, 91, 'Aula 4: Laços de Repetição', 'Laços de repetição são fundamentais em qualquer linguagem de programação, pois permitem a execução de um bloco de código várias vezes de forma automática. Em vez de escrever várias linhas de código semelhantes, você pode usar um laço para realizar uma tarefa repetitiva sem ter que reescrever o mesmo código repetidamente.', 'Existem diferentes tipos de laços de repetição, mas os mais comuns são o laço for e o laço while. O laço for é ideal quando sabemos o número de vezes que queremos executar uma determinada tarefa. Já o laço while é mais utilizado quando não sabemos quantas iterações ocorrerão e o laço continua enquanto uma condição for verdadeira.\r\n\r\nUm laço pode ser interrompido antes de terminar sua execução usando o comando break, que serve para sair do laço quando uma condição específica é atingida.\r\n\r\nLaço for O laço for é utilizado quando sabemos exatamente quantas vezes queremos que o código seja repetido. Um exemplo simples seria querer imprimir uma mensagem cinco vezes. O laço for percorre um conjunto de valores e executa um bloco de código para cada valor.\r\n\r\nLaço while O laço while funciona de forma diferente, pois a repetição acontece enquanto uma condição for verdadeira. Se a condição for sempre verdadeira, o laço irá executar indefinidamente, o que pode levar a um erro se não for controlado adequadamente.\r\n\r\nComando break O comando break é usado para interromper a execução do laço, ou seja, se em algum ponto a condição for atendida, o laço é interrompido e o programa continua a execução após o laço.\r\n\r\nLaço for com listas O laço for também pode ser utilizado para percorrer listas e outros tipos de coleções de dados. Ele é útil quando você precisa realizar uma operação com todos os elementos de uma lista, sem precisar escrever o código manualmente para cada item.', 'Qual é a principal diferença entre os laços for e while?\r\na) O laço for repete o código um número definido de vezes, enquanto o laço while repete até que uma condição seja falsa.\r\nb) O laço while repete o código um número definido de vezes, enquanto o laço for repete até que uma condição seja falsa.\r\nc) O laço for é usado apenas para listas, enquanto o laço while é usado apenas para números.\r\nd) Não há diferença, ambos fazem a mesma coisa.\r\n\r\nO que o comando break faz dentro de um laço?\r\na) Interrompe a execução do programa.\r\nb) Interrompe a execução do laço, mas o programa continua executando o restante do código.\r\nc) Faz o laço se repetir mais vezes.\r\nd) Substitui a condição de repetição do laço.\r\n\r\nQual será a saída do código a seguir?\r\n"Para o intervalo de números de 3 até 5, o laço imprimirá os números seguintes: 3, 4 e 5."\r\na) 0, 1, 2\r\nb) 3, 4, 5\r\nc) 3, 4, 5, 6\r\nd) 1, 2, 3\r\n\r\nO que acontece se a condição do laço while nunca for falsa?\r\na) O código dentro do laço será executado uma vez.\r\nb) O laço será executado infinitamente.\r\nc) O código dentro do laço será ignorado.\r\nd) O programa exibirá um erro de sintaxe.\r\n\r\nQual será a saída do seguinte código?\r\n"Imagine um laço while que executa até que a variável de controle seja menor que 3. A variável de controle é incrementada em 1 a cada execução."\r\na) 0, 1, 2\r\nb) 0, 1, 2, 3\r\nc) 1, 2, 3\r\nd) 1, 2\r\n\r\nQual laço você usaria para percorrer os elementos de uma lista?\r\na) while\r\nb) for\r\nc) break\r\nd) continue\r\n\r\nO que faz a função range(5)?\r\na) Cria uma lista com 5 elementos.\r\nb) Cria uma sequência de números de 1 a 5.\r\nc) Cria uma sequência de números de 0 a 5.\r\nd) Cria uma sequência de números de 1 a 6.\r\n\r\nQual será a saída do código abaixo?\r\n"Considerando um laço for que vai de 2 até 10, mas com um incremento de 2 a cada vez."\r\na) 2, 4, 6, 8\r\nb) 2, 4, 6, 8, 10\r\nc) 1, 2, 3, 4, 5, 6\r\nd) 1, 2, 3, 4\r\n\r\nQual é a sintaxe correta para usar o comando break dentro de um laço?\r\na) break (condição)\r\nb) break\r\nc) break if (condição)\r\nd) stop\r\n\r\nO que aconteceria se o código a seguir fosse executado?\r\n"Imagine um laço que percorre de 0 a 9, mas se atingir o número 5, o comando break interrompe o laço."\r\na) O código imprimirá os números de 0 a 5.\r\nb) O código imprimirá os números de 0 a 4.\r\nc) O código imprimirá os números de 1 a 5.\r\nd) O código imprimirá os números de 0 a 10.', 'https://www.youtube.com/watch?v=cL4YDtFnCt4'),
	(54, 92, 'Aula 1: Introdução ao Microsoft Word', 'O Microsoft Word é um dos programas mais utilizados para edição de textos, sendo uma ferramenta essencial em diversos ambientes profissionais e acadêmicos. Com ele, é possível criar documentos simples, como cartas e currículos, até documentos mais complexos, como relatórios e livros.', 'A interface do Word possui uma barra de ferramentas com várias opções de formatação, como negrito, itálico e sublinhado, além de ferramentas para inserção de imagens, tabelas e gráficos. Para começar a trabalhar, é importante entender como criar, salvar e formatar documentos. A formatação básica de texto no Word pode ser feita de forma simples através do menu superior.\r\n\r\nVocê também pode configurar margens, orientações de página e aplicar estilos predefinidos para melhorar a aparência do documento. Outra funcionalidade importante é o uso de cabeçalhos e rodapés para tornar os documentos mais organizados.', 'Qual é a principal função do Microsoft Word?\r\na) Editar imagens\r\nb) Criar documentos de texto\r\nc) Criar planilhas\r\nd) Organizar arquivos de áudio\r\n\r\nO que você deve fazer para salvar um documento no Word?\r\na) Clicar em "Arquivo" e depois em "Abrir"\r\nb) Clicar em "Arquivo" e depois em "Salvar Como"\r\nc) Clicar em "Editar" e depois em "Salvar"\r\nd) Clicar em "Inserir" e depois em "Salvar"\r\n\r\nO que significa "formatação básica de texto" no Word?\r\na) Alterar o texto para diferentes fontes e cores.\r\nb) Incluir gráficos e tabelas no texto.\r\nc) Aplicar negrito, itálico e sublinhado no texto.\r\nd) Alterar o formato do arquivo de documento.\r\n\r\nComo você pode inserir uma tabela no Word?\r\na) Através do menu "Inserir", clicando em "Tabela"\r\nb) Usando a tecla de atalho Ctrl+T\r\nc) Clicando com o botão direito e selecionando "Adicionar Tabela"\r\nd) Não é possível inserir tabelas no Word\r\n\r\nO que são cabeçalhos e rodapés no Word?\r\na) Áreas para adicionar cabeçalho de páginas da web.\r\nb) Áreas fixas para inserir texto no topo e no final de todas as páginas.\r\nc) Ferramentas para mudar a cor do fundo da página.\r\nd) Funções para organizar parágrafos.', 'https://www.youtube.com/watch?v=pfUnnEKSn2g'),
	(55, 92, 'Aula 2: Formatação Avançada de Texto no Microsoft ', 'A formatação avançada de texto no Microsoft Word permite que você crie documentos mais sofisticados e visualmente atrativos. Diferente da formatação básica, que se limita a negrito, itálico e sublinhado, a formatação avançada oferece uma gama de opções para personalizar a aparência do seu texto, tornando-o mais profissional e organizado.', 'Ao trabalhar com formatação avançada, você pode alterar a estrutura do texto com o uso de estilos e temas. Isso permite que você aplique rapidamente uma formatação específica em todo o documento, sem precisar formatar manualmente cada parte. Além disso, o Word permite a criação de listas numeradas e com marcadores, ajudando a organizar informações de maneira clara.\r\n\r\nO alinhamento do texto também é uma ferramenta importante. Você pode justificar o texto, alinhá-lo à esquerda ou à direita, e até criar alinhamentos personalizados com a funcionalidade de tabulação. No caso de parágrafos, você pode controlar o espaçamento entre as linhas e entre os parágrafos, além de ajustar as margens de cada parágrafo de forma independente.\r\n\r\nOutra funcionalidade de formatação avançada no Word é a criação de colunas. Isso permite que o texto seja distribuído em várias colunas, como em jornais ou boletins informativos. O Word também oferece recursos para adicionar sombras, bordas e até fundo colorido ao texto, deixando o documento mais atraente visualmente.', 'O que o recurso de tabulação no Microsoft Word permite fazer?\r\na) Alinhar texto de forma mais precisa, criando espaços personalizados.\r\nb) Adicionar imagens ao documento.\r\nc) Corrigir automaticamente erros gramaticais.\r\nd) Inserir tabelas no texto.\r\n\r\nQual a principal diferença entre a formatação básica e a formatação avançada no Word?\r\na) A formatação avançada permite a criação de gráficos e tabelas.\r\nb) A formatação avançada permite ajustes mais complexos no layout e no estilo do texto.\r\nc) A formatação básica permite apenas escrever texto, sem poder alterá-lo.\r\nd) A formatação avançada não permite o uso de estilos.\r\n\r\nComo você pode justificar o texto no Word?\r\na) Selecionando o texto e clicando em "Inserir > Alinhar".\r\nb) Selecionando o texto e clicando na opção "Justificar" na barra de ferramentas.\r\nc) Arrastando o texto até a margem direita da página.\r\nd) Alterando o tamanho da fonte.\r\n\r\nO que são listas numeradas e com marcadores no Word?\r\na) Funções que alteram a cor do texto.\r\nb) Ferramentas que ajudam a organizar informações em uma sequência ou em grupos.\r\nc) Formatação que cria bordas ao redor de parágrafos.\r\nd) Opções para adicionar imagens no documento.\r\n\r\nComo você pode alterar o espaçamento entre parágrafos no Word?\r\na) Utilizando a ferramenta de tabulação.\r\nb) Ajustando as margens do documento.\r\nc) Usando as opções de espaçamento no menu "Layout" ou "Parágrafo".\r\nd) Aplicando estilos de texto diferentes.', 'https://www.youtube.com/watch?v=ELtk2wmrmQc'),
	(56, 93, 'Aula 1: Introdução a Funções e Fórmulas no Excel', 'O Microsoft Excel é uma das ferramentas mais poderosas do Pacote Office para organização e análise de dados. Uma das funcionalidades mais importantes do Excel são as funções e fórmulas, que ajudam a realizar cálculos complexos de maneira rápida e eficiente. Ao dominar essas ferramentas, você será capaz de realizar análises mais detalhadas e automatizar diversas tarefas.', 'As fórmulas no Excel permitem realizar operações matemáticas, como somar, subtrair, multiplicar e dividir. A fórmula básica começa com o sinal de igual (=), seguido pela operação desejada. Por exemplo, =A1+B1 soma os valores das células A1 e B1.\r\n\r\nO Excel também possui diversas funções predefinidas, como SOMA, MÉDIA, MÍNIMO, MÁXIMO, entre outras. Para utilizar essas funções, basta digitar o nome da função seguido dos argumentos entre parênteses. Por exemplo, a função =SOMA(A1:A10) soma todos os valores de A1 até A10.\r\n\r\nAlém disso, o Excel permite criar fórmulas condicionais, como a função SE, que realiza diferentes operações dependendo de uma condição especificada. Por exemplo, =SE(A1>10; "Maior que 10"; "Menor ou igual a 10") retorna uma mensagem dependendo do valor de A1.\r\n\r\n', 'Qual é o primeiro passo para criar uma fórmula no Excel?\r\na) Clicar na célula e pressionar Enter.\r\nb) Digitar o sinal de igual (=) seguido da operação.\r\nc) Selecionar a célula desejada.\r\nd) Escolher uma função na barra de ferramentas.\r\n\r\nQual função no Excel soma todos os valores de um intervalo de células?\r\na) MÉDIA\r\nb) SOMA\r\nc) MÁXIMO\r\nd) MÍNIMO\r\n\r\nA função SE no Excel é usada para:\r\na) Multiplicar dois valores.\r\nb) Verificar uma condição e retornar um valor baseado no resultado.\r\nc) Dividir números em células diferentes.\r\nd) Criar gráficos a partir de dados.\r\n\r\nQual fórmula realiza a soma dos valores das células A1 a A10?\r\na) =SOMA(A1:A10)\r\nb) =MÉDIA(A1:A10)\r\nc) =SOMA(A1; A10)\r\nd) =SOMAR(A1:A10)\r\n\r\n', 'https://www.youtube.com/watch?v=0C9-AZlgjjE&list=PLKaxXxugagVtXc-fUNXCzw-FnRmJ5q4O7'),
	(57, 93, 'Aula 2: Trabalhando com Tabelas e Gráficos no Exce', 'Tabelas e gráficos são recursos essenciais no Excel para organizar e visualizar dados de forma clara e eficiente. As tabelas permitem armazenar grandes volumes de informações de forma estruturada, enquanto os gráficos facilitam a visualização e análise dos dados, destacando tendências e comparações.', 'Tabelas: No Excel, você pode criar tabelas para organizar dados de maneira mais eficiente. Para criar uma tabela, basta selecionar o intervalo de dados e clicar em "Inserir" > "Tabela". A tabela oferece funcionalidades como filtros, ordenação e fácil formatação.\r\n\r\nGráficos: Os gráficos no Excel ajudam a ilustrar dados de maneira visual. Existem diversos tipos de gráficos, como gráficos de barras, de linhas e de pizza. Para criar um gráfico, basta selecionar os dados e clicar em "Inserir" > "Gráfico", escolhendo o tipo que melhor representa seus dados. O Excel automaticamente gera o gráfico com base na seleção.\r\n\r\nAlém disso, o Excel permite personalizar os gráficos, alterando cores, legendas, títulos e outros elementos, tornando a visualização mais clara e atraente.', 'O que é necessário para criar uma tabela no Excel?\r\na) Selecionar o intervalo de dados e clicar em "Inserir" > "Tabela".\r\nb) Selecionar a célula e pressionar Ctrl+T.\r\nc) Adicionar uma fórmula de soma.\r\nd) Criar um gráfico automaticamente.\r\n\r\nQual é a principal vantagem de usar gráficos no Excel?\r\na) Eles permitem ordenar os dados em ordem crescente.\r\nb) Eles ajudam a visualizar as tendências e comparações entre os dados.\r\nc) Eles criam tabelas automaticamente.\r\nd) Eles corrigem erros de digitação nos dados.\r\n\r\nPara inserir um gráfico no Excel, você deve:\r\na) Selecionar os dados e clicar em "Inserir" > "Gráfico".\r\nb) Digitar uma fórmula.\r\nc) Selecionar uma célula e clicar em "Exibir".\r\nd) Escolher uma tabela pronta.\r\n\r\nAo criar um gráfico, você pode:\r\na) Somente escolher o tipo de gráfico.\r\nb) Alterar os dados automaticamente.\r\nc) Personalizar a aparência, como cores, títulos e legendas.\r\nd) Apenas exibir os dados numéricos.\r\n\r\n', 'https://www.youtube.com/watch?v=9e4nPtgoYoI'),
	(58, 94, 'Aula 1: Criando e Formatando Apresentações no Powe', 'O PowerPoint é uma ferramenta essencial para criar apresentações visuais dinâmicas. Seja para negócios, acadêmicas ou projetos pessoais, saber como criar uma apresentação impactante é fundamental para transmitir sua mensagem de forma clara e eficaz. O PowerPoint oferece várias opções de formatação e design, permitindo que você personalize slides para se adequar ao seu estilo.', 'Para começar a usar o PowerPoint, você deve abrir o programa e selecionar um modelo de apresentação ou começar uma apresentação em branco. O programa oferece uma variedade de modelos predefinidos que facilitam o processo de design. Ao criar seus slides, lembre-se de que cada slide pode ser considerado uma "página" que será exibida durante a apresentação.\r\n\r\nO PowerPoint permite a adição de diversos elementos multimídia, como imagens, vídeos, gráficos e tabelas. Para inserir esses elementos, basta selecionar a guia Inserir e escolher o tipo de mídia desejada. Além disso, as transições entre os slides também são importantes para manter o público envolvido. Existem vários efeitos de transição, que podem ser escolhidos na guia "Transições".\r\n\r\nAlém disso, a ferramenta de Animação permite adicionar movimento aos elementos do slide, como texto ou imagens, tornando a apresentação mais dinâmica. Porém, deve-se tomar cuidado para não exagerar nas animações, a fim de não distrair o público da mensagem principal.', 'O que você deve fazer para começar a trabalhar no PowerPoint?\r\na) Clicar em "Arquivo" > "Abrir".\r\nb) Selecionar um modelo de apresentação ou começar uma apresentação em branco.\r\nc) Escolher uma animação para os slides.\r\nd) Inserir uma tabela.\r\n\r\nQual guia você deve usar para adicionar imagens ou gráficos no PowerPoint?\r\na) Design.\r\nb) Inserir.\r\nc) Transições.\r\nd) Apresentação de Slides.\r\n\r\nComo você pode adicionar uma animação ao texto ou aos objetos de um slide?\r\na) Clicando na guia "Animações".\r\nb) Usando o botão "Inserir".\r\nc) Escolhendo "Revisão" no menu.\r\nd) Selecionando "Design" na barra de ferramentas.\r\n\r\nO que são transições no PowerPoint?\r\na) Efeitos de animação aplicados ao texto.\r\nb) Efeitos que ocorrem entre os slides.\r\nc) A movimentação dos elementos dentro de um slide.\r\nd) O formato de apresentação do texto.', 'https://www.youtube.com/watch?v=dDZ66gtP59k'),
	(59, 94, 'Aula 2: Apresentações Interativas com PowerPoint', 'As apresentações interativas no PowerPoint permitem criar uma experiência mais envolvente para o público. Através de links, botões e navegação personalizada, você pode tornar a apresentação mais dinâmica e interessante, permitindo que o espectador tenha um maior controle sobre o conteúdo apresentado.', 'Uma das maneiras de tornar uma apresentação interativa é inserindo hiperlinks. Os links podem ser usados para navegar entre os slides da apresentação ou até mesmo direcionar para sites externos. Para inserir um link, selecione o texto ou objeto que deseja transformar em link, clique com o botão direito e escolha "Vinculo".\r\n\r\nOutra forma de tornar a apresentação interativa é utilizando os botões de ação. Eles permitem que você crie atalhos para navegar diretamente para uma determinada parte da apresentação, como um slide específico ou até mesmo retornar ao início. Para inserir um botão de ação, vá até a guia "Inserir", clique em "Formas" e selecione "Botão de Ação".\r\n\r\nAlém disso, você pode utilizar a ferramenta de gravação de narração para tornar a apresentação mais pessoal e explicativa. Ao gravar sua narração, os espectadores poderão ouvir suas explicações enquanto assistem aos slides, criando uma apresentação mais envolvente.', 'Como você pode criar um hiperlink no PowerPoint?\r\na) Clicando na guia "Inserir" e selecionando "Link".\r\nb) Usando a ferramenta "Animações".\r\nc) Adicionando uma transição ao slide.\r\nd) Inserindo um gráfico.\r\n\r\nO que é um botão de ação no PowerPoint?\r\na) Um botão que executa uma função como pular para outro slide ou retornar ao início.\r\nb) Um botão que cria animações no slide.\r\nc) Um botão que permite alterar o design dos slides.\r\nd) Um botão que adiciona texto ao slide.\r\n\r\nComo você pode gravar uma narração no PowerPoint?\r\na) Na guia "Inserir", selecione "Gravação de Áudio".\r\nb) Na guia "Exibição", clique em "Gravar Apresentação".\r\nc) Usando a ferramenta "Design" para criar uma animação.\r\nd) Clicando em "Arquivo" > "Gravar".\r\n\r\nPara criar uma apresentação interativa, qual das seguintes opções é necessária?\r\na) Adicionar transições entre os slides.\r\nb) Inserir links e botões de ação para navegação.\r\nc) Aplicar efeitos de animação em todos os elementos.\r\nd) Gravar uma narração para cada slide.\r\n\r\n', 'https://www.youtube.com/watch?v=jiWoiO6_8sk'),
	(60, 95, 'Aula 1: O que é Robótica?', 'A robótica é a área da tecnologia que se ocupa do desenvolvimento de máquinas e dispositivos automatizados, conhecidos como robôs. Esses robôs podem realizar uma variedade de tarefas que normalmente seriam executadas por seres humanos, como montar produtos em fábricas, explorar planetas ou até mesmo realizar tarefas domésticas.', 'A robótica combina várias disciplinas, como mecânica, eletrônica e informática. A base da robótica está em criar máquinas que possam interagir com o mundo físico de forma autônoma ou com a intervenção humana.\r\n\r\nExistem três tipos principais de robôs:\r\n\r\nRobôs industriais: utilizados em fábricas e linhas de montagem.\r\nRobôs de serviço: realizam tarefas como limpar, entregar ou ajudar pessoas.\r\nRobôs exploratórios: enviados para lugares perigosos ou distantes, como outros planetas.\r\nA robótica educacional é uma ótima maneira de aprender sobre esses conceitos, pois permite que os alunos interajam com kits de robótica, criando seus próprios robôs e programando-os para executar tarefas simples.', 'O que é robótica?\r\na) A criação de programas de computador.\r\nb) A ciência que estuda a construção e programação de robôs.\r\nc) A engenharia de circuitos elétricos.\r\nd) A construção de máquinas de entretenimento.\r\n\r\nQual das seguintes áreas NÃO é um componente da robótica?\r\na) Mecânica.\r\nb) Eletrônica.\r\nc) Biologia.\r\nd) Informática.\r\n\r\nQuais são os três principais tipos de robôs?\r\na) Industriais, de serviço e exploratórios.\r\nb) Industriais, de brinquedo e de serviço.\r\nc) Inteligentes, de serviço e pessoais.\r\nd) Robôs domésticos, de pesquisa e industriais.\r\n\r\nComo a robótica educacional pode ajudar no aprendizado?\r\na) Por meio da interação com kits de robótica e programação.\r\nb) Através de aulas teóricas sobre mecânica.\r\nc) Pela observação de vídeos sobre robôs.\r\nd) Pela leitura de livros técnicos.', 'https://www.youtube.com/watch?v=29zvPVPKFtI'),
	(61, 95, 'Aula 2: Componentes Básicos de um Robô', 'Os robôs são compostos por uma variedade de componentes que trabalham juntos para realizar tarefas específicas. Conhecer esses componentes é essencial para entender como os robôs funcionam e como podemos construir os nossos próprios robôs.', 'Os componentes básicos de um robô incluem:\r\n\r\nSensores: Permitem que o robô perceba o ambiente ao seu redor, como sensores de distância, luz e temperatura.\r\nAtuadores: São responsáveis por realizar ações físicas, como mover rodas ou braços.\r\nControladores: São os "cérebros" do robô, normalmente um microcontrolador que processa os dados dos sensores e controla os atuadores de acordo com a programação.\r\nFonte de energia: Pode ser uma bateria ou outra forma de alimentação elétrica, essencial para o funcionamento do robô.\r\nA integração desses componentes, juntamente com a programação adequada, permite que o robô execute tarefas de forma eficiente e autônoma.', 'O que são sensores em um robô?\r\na) Dispositivos que fornecem energia ao robô.\r\nb) Componentes que permitem que o robô perceba o ambiente.\r\nc) Peças que controlam os movimentos do robô.\r\nd) Circuitos que armazenam informações.\r\n\r\nO que é um atuador em um robô?\r\na) O cérebro do robô, que processa as informações.\r\nb) O dispositivo responsável por executar movimentos físicos.\r\nc) O sensor que mede a distância do robô em relação aos objetos.\r\nd) A fonte de energia que alimenta o robô.\r\n\r\nQual componente de um robô é responsável por controlar suas ações?\r\na) Fonte de energia.\r\nb) Sensores.\r\nc) Atuadores.\r\nd) Controlador.\r\n\r\nPor que a fonte de energia é essencial para um robô?\r\na) Porque armazena os dados coletados pelos sensores.\r\nb) Porque permite que o robô se mova e execute tarefas.\r\nc) Porque facilita a programação do robô.\r\nd) Porque envia sinais aos atuadores.', 'https://www.youtube.com/watch?v=3YBBbJbn4Yw'),
	(62, 95, 'Aula 3: Montando o Seu Primeiro Robô', 'Agora que já aprendemos sobre os componentes básicos dos robôs, é hora de colocar o conhecimento em prática. Montar o seu próprio robô é uma das formas mais eficazes de aprender sobre robótica.', 'A montagem de um robô básico pode ser realizada utilizando kits de robótica que incluem componentes como motores, sensores e controladores. Neste exercício, vamos montar um robô seguidor de linha, que é capaz de detectar uma linha preta no chão e segui-la de forma autônoma.\r\n\r\nO robô seguidor de linha usa sensores de infra-vermelho para detectar a linha. Quando o robô está sobre a linha, ele continua a se mover, mas quando sai da linha, o sistema de controle ajusta os motores para voltar à linha.\r\n\r\nAlém disso, a programação do robô seguidor de linha é essencial. A lógica básica envolve o controle dos motores com base nas informações dos sensores, permitindo que o robô navegue de forma autônoma.', 'O que é um robô seguidor de linha?\r\na) Um robô que segue um caminho específico desenhado no chão.\r\nb) Um robô que move-se aleatoriamente até encontrar um obstáculo.\r\nc) Um robô que segue a cor da parede.\r\nd) Um robô que detecta a presença de outros robôs.\r\n\r\nQuais componentes são necessários para montar um robô seguidor de linha?\r\na) Motores, sensores de infravermelho e controladores.\r\nb) Apenas sensores de luz e bateria.\r\nc) Sensores de movimento e controle remoto.\r\nd) Apenas um motor e uma fonte de energia.\r\n\r\nComo os sensores de infravermelho ajudam no funcionamento de um robô seguidor de linha?\r\na) Detectando obstáculos em seu caminho.\r\nb) Identificando a linha no chão e ajustando os motores para segui-la.\r\nc) Monitorando a temperatura do robô.\r\nd) Medindo a distância do robô em relação à parede.\r\n\r\nQual é o objetivo da programação em um robô seguidor de linha?\r\na) Fazer o robô se mover aleatoriamente.\r\nb) Controlar os motores com base nas informações dos sensores para seguir a linha.\r\nc) Definir a cor do robô.\r\nd) Ajustar a potência dos sensores de luz.', 'https://www.youtube.com/watch?v=GUVGve4_7Ss'),
	(63, 96, 'Aula 1: Introdução à Programação de Robôs', 'Programar um robô é um dos aspectos mais empolgantes e desafiadores da robótica. Quando você programa um robô, você instrui o comportamento do robô, fazendo com que ele realize tarefas específicas com base em comandos. Existem várias linguagens de programação utilizadas para programar robôs, mas uma das mais populares no campo da robótica educacional é o Blockly, que usa blocos gráficos para facilitar a codificação.', 'A programação de um robô pode ser dividida em três etapas principais:\r\n\r\nDefinir o Comportamento: O primeiro passo é identificar o que o robô precisa fazer. Isso inclui o movimento, como ele reage a sensores, e como ele interage com o ambiente.\r\nCodificar o Comportamento: Usamos linguagens de programação, como o Blockly ou o Scratch, para criar comandos que definem o comportamento do robô.\r\nTestar e Ajustar: Depois de programar, é importante testar o robô em diversas condições para garantir que ele execute as tarefas conforme o esperado.\r\nA programação de robôs permite que se criem sistemas autônomos que possam aprender com a experiência ou responder a diferentes estímulos do ambiente.', 'Qual é o primeiro passo ao programar um robô?\r\na) Criar o design físico do robô.\r\nb) Definir o comportamento do robô.\r\nc) Testar os motores do robô.\r\nd) Escolher a cor do robô.\r\n\r\nQual das seguintes linguagens de programação é frequentemente usada na robótica educacional?\r\na) Python.\r\nb) JavaScript.\r\nc) Blockly.\r\nd) Ruby.\r\n\r\nQual é a função do controlador de um robô?\r\na) Identificar os obstáculos ao redor do robô.\r\nb) Monitorar a temperatura do robô.\r\nc) Processar as informações dos sensores e enviar comandos aos atuadores.\r\nd) Fornecer energia ao robô.\r\n\r\nPor que a programação de robôs é importante?\r\na) Para controlar o comportamento do robô e realizar tarefas.\r\nb) Para desenhar o formato do robô.\r\nc) Para ajustar a cor do robô.\r\nd) Para escolher o tipo de motor do robô.', 'https://www.youtube.com/watch?v=nGj5YlixdII&list=PL3DhF0LxKFjgOSxAs-4LwAYr_JDPh3607'),
	(64, 96, 'Aula 2: Estruturas de Controle - Condições e Laços', 'Em programação, estruturas de controle são instruções que permitem que o comportamento do programa seja alterado dependendo de certas condições ou repetido várias vezes. Essas estruturas são essenciais na programação de robôs para que eles possam tomar decisões e repetir ações automaticamente.', 'Existem duas principais estruturas de controle que utilizamos na programação de robôs:\r\n\r\nEstruturas Condicionais (If/Else): Elas permitem que o robô tome decisões com base em uma condição. Por exemplo, se o robô detecta um obstáculo, ele pode decidir desviar ou parar. As estruturas "se", "senão" e "se-senão" são as mais comuns.\r\n\r\nLaços de Repetição (For/While): Esses laços permitem que o robô execute uma ação repetidamente, até que uma condição seja atendida. Por exemplo, o robô pode continuar a mover-se até encontrar um obstáculo.\r\n\r\nA combinação dessas duas estruturas permite que o robô tenha um comportamento dinâmico e reaja de maneira inteligente ao ambiente.\r\n\r\n', 'O que uma estrutura condicional "If/Else" faz em um programa?\r\na) Repete uma ação várias vezes.\r\nb) Cria uma lista de comandos para o robô.\r\nc) Permite que o robô tome decisões com base em uma condição.\r\nd) Define o comportamento do motor do robô.\r\n\r\nQuando usar um laço de repetição "For" em programação de robôs?\r\na) Para tomar decisões baseadas em condições.\r\nb) Para repetir uma ação várias vezes até que uma condição seja atendida.\r\nc) Para dividir o programa em etapas.\r\nd) Para acionar os sensores do robô.\r\n\r\nQual é a função de um "laço While" em programação de robôs?\r\na) Controlar os motores do robô.\r\nb) Repetir uma ação enquanto uma condição for verdadeira.\r\nc) Programar os sensores do robô.\r\nd) Fazer o robô mudar de direção.\r\n\r\nEm qual situação você utilizaria uma estrutura "If/Else" em um robô?\r\na) Para fazer o robô seguir uma linha.\r\nb) Para decidir se o robô deve virar à esquerda ou à direita quando encontrar um obstáculo.\r\nc) Para definir a cor do robô.\r\nd) Para fazer o robô mover-se para frente.', 'https://www.youtube.com/watch?v=MNPZMBrdsAU');
/*!40000 ALTER TABLE `aula` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.avaliacoes
CREATE TABLE IF NOT EXISTS `avaliacoes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `titulo` varchar(255) NOT NULL,
  `descricao` text DEFAULT NULL,
  `data_criacao` timestamp NOT NULL DEFAULT current_timestamp(),
  `nivel_dificuldade` enum('facil','medio','dificil') DEFAULT 'medio',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.avaliacoes: ~3 rows (aproximadamente)
/*!40000 ALTER TABLE `avaliacoes` DISABLE KEYS */;
INSERT IGNORE INTO `avaliacoes` (`id`, `titulo`, `descricao`, `data_criacao`, `nivel_dificuldade`) VALUES
	(2, 'Avaliação de Programação avançada', 'Esta avaliação tem como objetivo avaliar o seu entendimento sobre conceitos avançados de programação, incluindo estruturas de dados, algoritmos, e paradigmas de programação. Responda a todas as questões cuidadosamente.', '2024-11-01 12:18:40', 'facil'),
	(4, 'Avaliação de Lógica de Programação', 'Esta avaliação testa seus conhecimentos em lógica de programação, abordando conceitos fundamentais e práticas.', '2024-11-01 17:12:05', 'facil'),
	(6, 'Avaliação de Robótica', 'Essa avaliação cobre conceitos gerais sobre robótica, abrangendo diferentes aspectos da área, desde a definição até aplicações e componentes principais.', '2024-11-13 09:39:20', 'medio');
/*!40000 ALTER TABLE `avaliacoes` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.conclusao_curso
CREATE TABLE IF NOT EXISTS `conclusao_curso` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `aluno_id` int(11) DEFAULT NULL,
  `curso_id` int(11) DEFAULT NULL,
  `data_conclusao` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `aluno_id` (`aluno_id`),
  KEY `curso_id` (`curso_id`),
  CONSTRAINT `conclusao_curso_ibfk_1` FOREIGN KEY (`aluno_id`) REFERENCES `usuarios` (`idUsu`) ON DELETE CASCADE,
  CONSTRAINT `conclusao_curso_ibfk_2` FOREIGN KEY (`curso_id`) REFERENCES `curso` (`cod_curso`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.conclusao_curso: ~0 rows (aproximadamente)
/*!40000 ALTER TABLE `conclusao_curso` DISABLE KEYS */;
/*!40000 ALTER TABLE `conclusao_curso` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.curso
CREATE TABLE IF NOT EXISTS `curso` (
  `cod_curso` int(11) NOT NULL AUTO_INCREMENT,
  `nome` varchar(50) DEFAULT NULL,
  `ch` varchar(50) DEFAULT NULL,
  `capa` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`cod_curso`)
) ENGINE=InnoDB AUTO_INCREMENT=72 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.curso: ~18 rows (aproximadamente)
/*!40000 ALTER TABLE `curso` DISABLE KEYS */;
INSERT IGNORE INTO `curso` (`cod_curso`, `nome`, `ch`, `capa`) VALUES
	(49, 'Linguagem de programação', '60', '/TecnoInfo/img/curso/capa/prog.jpg'),
	(50, 'Curso de Robótica Básica', '30', '/TecnoInfo/img/curso/capa/6714399b656f9.jpg'),
	(52, 'Curso básico de Pacote Office ', '36', '/TecnoInfo/img/curso/capa/67143ad5a1366.png'),
	(54, 'Python avançado', '60', '/TecnoInfo/img/curso/capa/python.jpg.jpg'),
	(55, 'Montagem de Computadores', '90', '/TecnoInfo/img/curso/capa/pc.jpg'),
	(56, 'Pacote Office - Excel', '8', '/TecnoInfo/img/curso/capa/excel.jpg.jpg'),
	(57, 'Pacote Office - Word', '10', '/TecnoInfo/img/curso/capa/word.jpg.jpg'),
	(59, 'História da Informática I', '30', '/TecnoInfo/img/curso/capa/histInfo.jpg.jpg'),
	(60, 'Segurança da informação', '42', '/TecnoInfo/img/curso/capa/cadeado-seguranca-1060x655.jpg.jpg'),
	(61, 'Python para iniciantes', '24', '/TecnoInfo/img/curso/capa/linguagem-python-1024x579.jpg.jpg'),
	(63, 'Introdução ao Hardware de Computadores', '64', '/TecnoInfo/img/curso/capa/22os-principais-componentes-de-um-computador1675452165.jpg.jpg'),
	(64, 'Microsoft Outlook', '16', '/TecnoInfo/img/curso/capa/mo.png'),
	(66, ' Ciência de Dados e Inteligência Artificial', '80', '/TecnoInfo/img/curso/capa/cienciadedados.jpg.jpg'),
	(67, 'Programação com Scratch', '20', '/TecnoInfo/img/curso/capa/scratch.jpg'),
	(68, 'Microcontroladores e Arduino', '50', '/TecnoInfo/img/curso/capa/arduino.jpg.jpg'),
	(69, 'Introdução à Programação', '40', '/TecnoInfo/img/curso/capa/prog.jpg'),
	(70, 'Introdução ao Pacote Office', '5', '/TecnoInfo/img/curso/capa/intro_pctOffice.png'),
	(71, 'Introdução à Robótica', '15', '/TecnoInfo/img/curso/capa/conceitos_basicos_hardware.png');
/*!40000 ALTER TABLE `curso` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.exercicios
CREATE TABLE IF NOT EXISTS `exercicios` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cod_aula` int(11) DEFAULT NULL,
  `pergunta` text DEFAULT NULL,
  `resposta_a` text DEFAULT NULL,
  `resposta_b` text DEFAULT NULL,
  `resposta_c` text DEFAULT NULL,
  `resposta_d` text DEFAULT NULL,
  `resposta_certa` char(1) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `cod_aula` (`cod_aula`),
  CONSTRAINT `exercicios_ibfk_1` FOREIGN KEY (`cod_aula`) REFERENCES `aula` (`cod_aula`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.exercicios: ~0 rows (aproximadamente)
/*!40000 ALTER TABLE `exercicios` DISABLE KEYS */;
/*!40000 ALTER TABLE `exercicios` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.log_acesso
CREATE TABLE IF NOT EXISTS `log_acesso` (
  `idLog` int(11) NOT NULL AUTO_INCREMENT,
  `idUsu` int(11) NOT NULL,
  `data_login` timestamp NOT NULL DEFAULT current_timestamp(),
  `ip_acesso` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`idLog`),
  KEY `idUsu` (`idUsu`),
  CONSTRAINT `log_acesso_ibfk_1` FOREIGN KEY (`idUsu`) REFERENCES `usuarios` (`idUsu`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.log_acesso: ~0 rows (aproximadamente)
/*!40000 ALTER TABLE `log_acesso` DISABLE KEYS */;
/*!40000 ALTER TABLE `log_acesso` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.modulo
CREATE TABLE IF NOT EXISTS `modulo` (
  `cod_modulo` int(11) NOT NULL AUTO_INCREMENT,
  `nome_mod` mediumtext DEFAULT NULL,
  `cod_curso` int(11) NOT NULL,
  PRIMARY KEY (`cod_modulo`),
  KEY `cod_curso` (`cod_curso`),
  CONSTRAINT `modulo_ibfk_1` FOREIGN KEY (`cod_curso`) REFERENCES `curso` (`cod_curso`)
) ENGINE=InnoDB AUTO_INCREMENT=97 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.modulo: ~24 rows (aproximadamente)
/*!40000 ALTER TABLE `modulo` DISABLE KEYS */;
INSERT IGNORE INTO `modulo` (`cod_modulo`, `nome_mod`, `cod_curso`) VALUES
	(68, 'Módulo 01: Programação orientada a objeto', 49),
	(69, 'Módulo 01: Introdução à Robótica', 50),
	(71, 'Módulo 01: Introdução ao pacote office', 52),
	(72, 'Módulo 01: Introdução ao Python Avançado', 54),
	(73, 'Módulo 01: Introdução à Montagem de Computadores', 55),
	(74, 'Módulo 01: Domínio do Microsoft Excel', 56),
	(75, 'Módulo 01: Habilidades Avançadas em Microsoft Word', 57),
	(77, 'Módulo 01: A Evolução da Informática', 59),
	(78, 'Fundamentos da Segurança da Informação', 60),
	(79, 'Fundamentos do Python: Sua Primeira Linguagem de Programação', 61),
	(81, 'Introdução ao Hardware de Computadores', 63),
	(82, 'Domine o Microsoft Outlook: Gestão Eficiente de E-mails e Tarefas', 64),
	(85, 'Módulo 1: Fundamentos de Ciência de Dados', 66),
	(86, 'Módulo 2: Introdução à Inteligência Artificial', 66),
	(87, 'Módulo 1: Introdução ao Scratch', 67),
	(88, 'Módulo 2: Conceitos de Programação com Scratch', 67),
	(89, 'Módulo 1: Introdução aos Microcontroladores', 68),
	(90, 'Módulo 2: Programação com Arduino', 68),
	(91, 'Módulo 1: Fundamentos da Programação', 69),
	(92, 'Módulo 1: Microsoft Word', 70),
	(93, 'Módulo 2: Microsoft Excel', 70),
	(94, 'Módulo 3: Apresentações Profissionais no Microsoft PowerPoint', 70),
	(95, 'Módulo 1: Fundamentos de Robótica', 71),
	(96, 'Módulo 2: Programação de Robôs', 71);
/*!40000 ALTER TABLE `modulo` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.pagamentos
CREATE TABLE IF NOT EXISTS `pagamentos` (
  `idPag` int(11) NOT NULL AUTO_INCREMENT,
  `idUsu` int(11) NOT NULL,
  `cod_plano` int(11) NOT NULL,
  `card_number` varchar(16) NOT NULL,
  `expiry_date` varchar(5) NOT NULL,
  `cvc` varchar(3) NOT NULL,
  `card_name` varchar(255) NOT NULL,
  `data_pagamento` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`idPag`),
  KEY `idUsu` (`idUsu`),
  KEY `cod_plano` (`cod_plano`),
  CONSTRAINT `pagamentos_ibfk_1` FOREIGN KEY (`idUsu`) REFERENCES `usuarios` (`idUsu`),
  CONSTRAINT `pagamentos_ibfk_2` FOREIGN KEY (`cod_plano`) REFERENCES `plano` (`cod_plano`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.pagamentos: ~2 rows (aproximadamente)
/*!40000 ALTER TABLE `pagamentos` DISABLE KEYS */;
INSERT IGNORE INTO `pagamentos` (`idPag`, `idUsu`, `cod_plano`, `card_number`, `expiry_date`, `cvc`, `card_name`, `data_pagamento`) VALUES
	(8, 218, 16, '1234565656565656', '12/45', '123', 'roxo', '2024-11-28 00:00:00'),
	(9, 189, 13, '2222333355554444', '11/42', '113', 'Visa', '2024-11-24 00:00:00'),
	(10, 242, 12, '1212 1121 2121 1', '21/31', '321', 'roxinho', '2024-11-30 19:49:33');
/*!40000 ALTER TABLE `pagamentos` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.plano
CREATE TABLE IF NOT EXISTS `plano` (
  `cod_plano` int(11) NOT NULL AUTO_INCREMENT,
  `titulo_plano` varchar(50) DEFAULT NULL,
  `valor_plano` int(11) DEFAULT NULL,
  `corpo_plano` mediumtext DEFAULT NULL,
  `usuFinal` enum('ALUNO','UNIDADE_ENSINO') NOT NULL DEFAULT 'ALUNO',
  PRIMARY KEY (`cod_plano`)
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.plano: ~8 rows (aproximadamente)
/*!40000 ALTER TABLE `plano` DISABLE KEYS */;
INSERT IGNORE INTO `plano` (`cod_plano`, `titulo_plano`, `valor_plano`, `corpo_plano`, `usuFinal`) VALUES
	(12, 'ESSENCIAL', 6, '25% dos cursos de Programação, 25% dos cursos de Robótica, 25% dos cursos de Pacote Office ', 'ALUNO'),
	(13, 'PADRÃO', 8, '50% dos cursos de Programação, 25% de Robótica, 25% dos cursos de Pacote Office', 'ALUNO'),
	(14, 'PROFISSIONAL', 10, '50% dos cursos de Programação, 50% de Robótica, 50% de Pacote Office ', 'ALUNO'),
	(15, 'MESTRE', 13, '100% de TODOS os cursos', 'ALUNO'),
	(16, 'ESSENCIAL', 4, '15 Turmas, 30% dos cursos de Programação, 30% dos cursos de Robótica, 30% dos cursos de Pacote Office ', 'UNIDADE_ENSINO'),
	(22, 'PADRÃO', 7, '25 turmas, 55% de todos os cursos de Programação, 45% de todos os cursos de Robótica, 55% de todos os cursos de Pacote Office', 'UNIDADE_ENSINO'),
	(23, 'PROFISSIONAL', 8, '35 turmas, 60% de todos os cursos de programação, 55% de todos os cursos de robótica, 60% de todos oscurso de Pacote Office', 'UNIDADE_ENSINO'),
	(25, 'MESTRE', 12, 'Cadastro ilimitado de turmas, 100% de TODOS os cursos', 'UNIDADE_ENSINO');
/*!40000 ALTER TABLE `plano` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.questoes
CREATE TABLE IF NOT EXISTS `questoes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `avaliacao_id` int(11) DEFAULT NULL,
  `enunciado` text NOT NULL,
  `opcao_a` varchar(255) DEFAULT NULL,
  `opcao_b` varchar(255) DEFAULT NULL,
  `opcao_c` varchar(255) DEFAULT NULL,
  `opcao_d` varchar(255) DEFAULT NULL,
  `resposta_correta` enum('a','b','c','d') DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `avaliacao_id` (`avaliacao_id`),
  CONSTRAINT `questoes_ibfk_1` FOREIGN KEY (`avaliacao_id`) REFERENCES `avaliacoes` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.questoes: ~17 rows (aproximadamente)
/*!40000 ALTER TABLE `questoes` DISABLE KEYS */;
INSERT IGNORE INTO `questoes` (`id`, `avaliacao_id`, `enunciado`, `opcao_a`, `opcao_b`, `opcao_c`, `opcao_d`, `resposta_correta`) VALUES
	(3, 2, '1 - Qual das seguintes estruturas de dados é mais adequada para implementar uma fila?', 'Pilha (Stack)', 'Lista encadeada (Linked List)', 'Árvore binária (Binary Tree)', 'Vetor (Array)', 'b'),
	(4, 2, '2 - No contexto de programação orientada a objetos, o que é polimorfismo?', 'A capacidade de um objeto de se comportar de várias maneiras dependendo do contexto.', 'O processo de ocultar dados dentro de uma classe.', 'A criação de uma nova classe a partir de uma classe existente.', 'A estruturação de dados em uma hierarquia de classes.', 'a'),
	(5, 2, '3 - Qual dos seguintes algoritmos tem a complexidade de tempo média mais baixa para ordenação de uma lista?', 'Bubble Sort', 'Merge Sort', 'Selection Sort', 'Insertion Sort', 'b'),
	(7, 4, '1 - O que é uma variável em programação?', ' Um tipo de dado', ' Um espaço na memória para armazenar valores', 'Um comando de saída', 'Um algoritmo', 'b'),
	(8, 4, '2 - O que o comando if faz em uma linguagem de programação?', ' Realiza uma operação matemática', 'Cria um loop', 'Condicionalmente executa um bloco de código', 'Declara uma variável', 'c'),
	(9, 4, '3 - Qual dos seguintes é um tipo de dado numérico?', 'String', ' Integer', 'Boolean', 'Array', 'b'),
	(10, 4, '4 - O que significa "loop" em programação?', 'Um comando que interrompe a execução', 'Uma estrutura que repete um bloco de código', ' Uma função que retorna um valor', 'Uma variável de texto', 'b'),
	(19, 6, '1. O que é a robótica?', ' Estudo do movimento humano e sua simulação em máquinas', 'Área da ciência que desenvolve sistemas computacionais para controle de máquinas', 'Ciência que estuda a criação e operação de máquinas autônomas ou controladas', 'Tecnologia voltada para o controle de sistemas eletrônicos de automação', 'c'),
	(20, 6, '2. Qual a principal função de um sensor em um robô?', 'Fornecer energia para o funcionamento do robô', ' Controlar os movimentos do robô de forma autônoma', 'Monitorar e captar dados do ambiente para o controle do robô', 'Armazenar dados processados para futuras análises', 'c'),
	(21, 6, '3. O que caracteriza um robô autônomo?', ' A capacidade de se conectar à internet para baixar novos programas', 'A habilidade de executar tarefas sem a necessidade de intervenção humana', ' A capacidade de realizar operações com base apenas em comandos de voz', 'A necessidade constante de interação com operadores humanos', 'b'),
	(22, 6, '4. Qual é a função de um atuador em um robô?', 'Fornecer energia para o processador do robô', ' Executar movimentos e ações físicas baseadas nos comandos recebidos', 'Processar os dados capturados pelos sensores', 'Armazenar as informações coletadas do ambiente', 'b'),
	(23, 6, '5. O que é um manipulador em um robô industrial?', ' O dispositivo que monitora o ambiente ao redor do robô', 'O sistema responsável pela movimentação dos motores', 'A parte do robô que permite realizar tarefas físicas, como pegar, mover ou montar objetos', 'O conjunto de sensores usados para detectar objetos ao redor', 'c'),
	(24, 6, '6. Em relação à programação de robôs, o que é um "algoritmo"?', 'Uma estrutura física usada para construir a máquina', 'Um conjunto de sensores que fornecem dados para o robô', 'Um conjunto de instruções para que o robô execute tarefas específicas', 'O sistema de inteligência artificial que faz o robô aprender sozinho', 'c'),
	(25, 6, '7. Qual das alternativas abaixo é um exemplo de robô utilizado na medicina?', 'Robôs que automatizam processos industriais em fábricas', ' Robôs capazes de realizar cirurgias assistidas por um cirurgião', 'Robôs que apenas fazem limpeza de ambientes hospitalares', 'Robôs projetados para realizar testes laboratoriais em ambientes controlados', 'b'),
	(26, 6, '8. Em que tipo de situação os robôs colaborativos (cobots) são mais vantajosos?', 'Quando a tarefa exige alta precisão e velocidade, sem interação humana', ' Quando a tarefa é muito pesada e exige força humana para o controle', 'Quando há necessidade de interação direta entre humanos e robôs no ambiente de trabalho', ' Quando a tarefa requer apenas supervisão remota, sem interação física', 'c'),
	(27, 6, '9. O que é o conceito de "inteligência artificial" no contexto da robótica?', 'A habilidade do robô de realizar tarefas repetitivas sem variabilidade', 'O uso de algoritmos que permitem ao robô aprender e tomar decisões baseadas em dados e experiência', 'A capacidade do robô de processar informações rapidamente', 'A técnica utilizada para controlar os movimentos do robô sem falhas mecânicas', 'b'),
	(28, 6, '10. Qual a principal vantagem dos robôs móveis em relação aos fixos?', 'Maior capacidade de carga', 'Maior precisão nas tarefas realizadas', ' Capacidade de se deslocar livremente em diferentes ambientes para realizar tarefas variadas', 'Menor custo de fabricação', 'c');
/*!40000 ALTER TABLE `questoes` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.relacionamentos
CREATE TABLE IF NOT EXISTS `relacionamentos` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `idUsu` int(11) NOT NULL,
  `relacionado_com_id` int(11) NOT NULL,
  `tipo_relacionamento` varchar(50) DEFAULT NULL,
  `data_relacionamento` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `relacionado_com_id` (`relacionado_com_id`),
  KEY `idUsu` (`idUsu`),
  CONSTRAINT `relacionamentos_ibfk_1` FOREIGN KEY (`idUsu`) REFERENCES `usuarios` (`idUsu`) ON DELETE CASCADE,
  CONSTRAINT `relacionamentos_ibfk_2` FOREIGN KEY (`relacionado_com_id`) REFERENCES `usuarios` (`idUsu`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.relacionamentos: ~0 rows (aproximadamente)
/*!40000 ALTER TABLE `relacionamentos` DISABLE KEYS */;
/*!40000 ALTER TABLE `relacionamentos` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.resultados_avaliacao
CREATE TABLE IF NOT EXISTS `resultados_avaliacao` (
  `idResult` int(11) NOT NULL AUTO_INCREMENT,
  `idAlu` int(11) DEFAULT NULL,
  `avaliacao_id` int(11) DEFAULT NULL,
  `acertos` int(11) DEFAULT NULL,
  `total_questoes` int(11) DEFAULT NULL,
  `data_avaliacao` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`idResult`),
  KEY `idAlu` (`idAlu`),
  KEY `avaliacao_id` (`avaliacao_id`),
  CONSTRAINT `resultados_avaliacao_ibfk_1` FOREIGN KEY (`idAlu`) REFERENCES `aluno` (`idAlu`),
  CONSTRAINT `resultados_avaliacao_ibfk_2` FOREIGN KEY (`avaliacao_id`) REFERENCES `avaliacoes` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.resultados_avaliacao: ~0 rows (aproximadamente)
/*!40000 ALTER TABLE `resultados_avaliacao` DISABLE KEYS */;
/*!40000 ALTER TABLE `resultados_avaliacao` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.turma
CREATE TABLE IF NOT EXISTS `turma` (
  `idTurma` int(11) NOT NULL AUTO_INCREMENT,
  `idTutor` int(11) NOT NULL,
  `numero_turma` int(11) NOT NULL,
  `limite_alunos` int(11) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`idTurma`),
  KEY `idTutor` (`idTutor`),
  CONSTRAINT `turma_ibfk_1` FOREIGN KEY (`idTutor`) REFERENCES `tutor` (`idTutor`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=72 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.turma: ~5 rows (aproximadamente)
/*!40000 ALTER TABLE `turma` DISABLE KEYS */;
INSERT IGNORE INTO `turma` (`idTurma`, `idTutor`, `numero_turma`, `limite_alunos`, `created_at`, `updated_at`) VALUES
	(60, 7, 3151, 32, '2024-11-25 14:43:15', '2024-11-26 03:55:42'),
	(62, 8, 2151, 30, '2024-11-25 14:52:01', '2024-11-26 02:56:25'),
	(65, 11, 1151, 50, '2024-11-26 03:54:51', '2024-11-26 03:54:51'),
	(66, 7, 1152, 43, '2024-11-26 03:55:37', '2024-11-26 03:55:37');
/*!40000 ALTER TABLE `turma` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.turma_aluno
CREATE TABLE IF NOT EXISTS `turma_aluno` (
  `turma_id` int(11) NOT NULL,
  `aluno_id` int(11) NOT NULL,
  `unidade_ensino_id` int(11) NOT NULL,
  PRIMARY KEY (`turma_id`,`aluno_id`),
  KEY `fk_aluno` (`aluno_id`),
  CONSTRAINT `fk_aluno` FOREIGN KEY (`aluno_id`) REFERENCES `aluno` (`idAlu`) ON DELETE CASCADE,
  CONSTRAINT `fk_turma` FOREIGN KEY (`turma_id`) REFERENCES `turma` (`idTurma`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.turma_aluno: ~0 rows (aproximadamente)
/*!40000 ALTER TABLE `turma_aluno` DISABLE KEYS */;
/*!40000 ALTER TABLE `turma_aluno` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.turma_tutor
CREATE TABLE IF NOT EXISTS `turma_tutor` (
  `id_tutor` int(11) DEFAULT NULL,
  `id_turma` int(11) DEFAULT NULL,
  KEY `FK1_tutor` (`id_tutor`),
  KEY `FK2_turma` (`id_turma`),
  CONSTRAINT `FK1_tutor` FOREIGN KEY (`id_tutor`) REFERENCES `tutor` (`idTutor`) ON DELETE CASCADE,
  CONSTRAINT `FK2_turma` FOREIGN KEY (`id_turma`) REFERENCES `turma` (`idTurma`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.turma_tutor: ~0 rows (aproximadamente)
/*!40000 ALTER TABLE `turma_tutor` DISABLE KEYS */;
/*!40000 ALTER TABLE `turma_tutor` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.tutor
CREATE TABLE IF NOT EXISTS `tutor` (
  `idTutor` int(11) NOT NULL AUTO_INCREMENT,
  `idUsu` int(11) NOT NULL,
  `nome` varchar(100) NOT NULL DEFAULT '',
  `foto` varchar(255) DEFAULT 'img/user/semfoto.png',
  `email` varchar(100) NOT NULL DEFAULT '',
  `senha` varchar(255) NOT NULL DEFAULT '',
  `autenticidade` enum('SIM','NÃO') NOT NULL DEFAULT 'NÃO',
  `cpf` mediumtext NOT NULL,
  `unidade_ensino_id` int(11) NOT NULL,
  PRIMARY KEY (`idTutor`),
  UNIQUE KEY `email` (`email`),
  KEY `idUsu` (`idUsu`),
  CONSTRAINT `tutor_ibfk_1` FOREIGN KEY (`idUsu`) REFERENCES `usuarios` (`idUsu`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.tutor: ~3 rows (aproximadamente)
/*!40000 ALTER TABLE `tutor` DISABLE KEYS */;
INSERT IGNORE INTO `tutor` (`idTutor`, `idUsu`, `nome`, `foto`, `email`, `senha`, `autenticidade`, `cpf`, `unidade_ensino_id`) VALUES
	(7, 198, 'Giovane Rodrigues', '../img/user/67448a625a95c.png', 'gio@prof.com', '$2y$10$HBwEPF8H9RZbjugCCXbwge8jLeCi3wxtjrfu6St3ywZk1pglXveBC', 'NÃO', '036.040.724-25', 0),
	(8, 199, 'Andreia Limão Silva', '../img/user/67448bbfbd93d.jpg', 'andreia@prof.com', '$2y$10$735.61M6OF2GYeHoYN1fcu6VPPR34LBiiLInd4cC3WBpgajdShZmm', 'NÃO', '181.654.507-43', 0),
	(11, 223, 'Fabrício Oliveira', '../img/user/674565144f77d.jpg', 'fb@prof.com', '$2y$10$3eE4zKD9Dl1iwlQPG/eB9.u5pIwz0SmNMHccOz0i0Py0fRt4Bct.K', 'SIM', '090.876.444-56', 0),
	(14, 244, 'ewqeqw', '../img/user/674b9e0012042.png', 'testando@tutor', '$2y$10$wTz8wIygZRm/Ha408oCAreBMZCUgMnjUhVP6qxSfkSEddKYhGVn96', 'NÃO', '321.321.321-31', 0);
/*!40000 ALTER TABLE `tutor` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.unidade_ensino
CREATE TABLE IF NOT EXISTS `unidade_ensino` (
  `idUni` int(11) NOT NULL AUTO_INCREMENT,
  `idUsu` int(11) NOT NULL,
  `nome` varchar(100) NOT NULL,
  `foto` varchar(255) DEFAULT NULL,
  `email` varchar(100) NOT NULL,
  `senha` varchar(255) NOT NULL,
  `cnpj` int(11) DEFAULT NULL,
  `tel` int(11) DEFAULT NULL,
  `insc_est` int(11) DEFAULT NULL,
  `nivel_ensino` set('fundamental','medio','todos') DEFAULT NULL,
  `doc_unid` varchar(50) DEFAULT NULL,
  `cod_unid` int(11) DEFAULT NULL,
  PRIMARY KEY (`idUni`),
  UNIQUE KEY `email` (`email`),
  KEY `idUsu` (`idUsu`),
  CONSTRAINT `unidade_ensino_ibfk_1` FOREIGN KEY (`idUsu`) REFERENCES `usuarios` (`idUsu`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.unidade_ensino: ~3 rows (aproximadamente)
/*!40000 ALTER TABLE `unidade_ensino` DISABLE KEYS */;
INSERT IGNORE INTO `unidade_ensino` (`idUni`, `idUsu`, `nome`, `foto`, `email`, `senha`, `cnpj`, `tel`, `insc_est`, `nivel_ensino`, `doc_unid`, `cod_unid`) VALUES
	(8, 193, 'ISAÍAS ALVES', '../../img/user/67447f9ed925a.jpeg', 'isaias@gmail.com', '$2y$10$7BRGt9peCJOC/VkgMAy8weOxiUjmPIUSlREy4KkiqpFUf.BoOhvZG', 78489, 0, 2147483647, 'fundamental', '', NULL),
	(9, 218, 'MesquitaRio', '../../img/user/6744d3dfb9299.jpg', 'mesq@gmail.com', '$2y$10$JGKJOpI2.4YZmUxRWGoOJu0BWrSjUtB5/4D9PDU8y0m.FbiTxOOYy', 33435, 0, 2147483647, 'medio', '', NULL),
	(10, 219, 'EMÍLIO CARLOS', '../../img/user/6744d40f12458.jpeg', 'emilio@gmail.com', '$2y$10$cgqaPv8dfmnoDu7fbgJZYeIDqF6zQwri76ohk7oaCcRXmY5UXYJ9y', 45787, 0, 2147483647, 'fundamental', '', NULL);
/*!40000 ALTER TABLE `unidade_ensino` ENABLE KEYS */;

-- Copiando estrutura para tabela tecnoinfo.usuarios
CREATE TABLE IF NOT EXISTS `usuarios` (
  `idUsu` int(11) NOT NULL AUTO_INCREMENT,
  `nome` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `senha` varchar(255) NOT NULL,
  `nivel_acesso` enum('ALUNO','UNIDADE_ENSINO','TUTOR','ADMINISTRADOR') NOT NULL,
  `data_cadastro` timestamp NOT NULL DEFAULT current_timestamp(),
  `foto` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`idUsu`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=245 DEFAULT CHARSET=utf8mb4;

-- Copiando dados para a tabela tecnoinfo.usuarios: ~15 rows (aproximadamente)
/*!40000 ALTER TABLE `usuarios` DISABLE KEYS */;
INSERT IGNORE INTO `usuarios` (`idUsu`, `nome`, `email`, `senha`, `nivel_acesso`, `data_cadastro`, `foto`) VALUES
	(189, 'Lindalva Romano', 'linda@gmail.com', '$2y$10$mWgb7aQ8eqLB/7fEcwnbjeXVPlo8GKW8K73DvZtPntaVv88ibCL5a', 'ALUNO', '2024-11-25 10:37:47', '67452f4341f94-user7.jpeg'),
	(193, 'ISAÍAS ALVES', 'isaias@gmail.com', '$2y$10$7BRGt9peCJOC/VkgMAy8weOxiUjmPIUSlREy4KkiqpFUf.BoOhvZG', 'UNIDADE_ENSINO', '2024-11-25 10:46:06', '../../img/user/67447f9ed925a.jpeg'),
	(198, 'Giovane Rodrigues', 'gio@prof.com', '$2y$10$HBwEPF8H9RZbjugCCXbwge8jLeCi3wxtjrfu6St3ywZk1pglXveBC', 'TUTOR', '2024-11-25 11:32:02', NULL),
	(199, 'Andreia Limão Silva', 'andreia@prof.com', '$2y$10$735.61M6OF2GYeHoYN1fcu6VPPR34LBiiLInd4cC3WBpgajdShZmm', 'TUTOR', '2024-11-25 11:37:51', NULL),
	(200, 'Fabrício Oviveira', 'fab@prof.com', '$2y$10$Q03F4ByYVpPC5YLNS/QBKuEUF4oiWUsjdHBdLm24MCEQ9FxLezlJG', 'TUTOR', '2024-11-25 11:38:12', NULL),
	(201, 'Aluno', 'izete@iza', '$2y$10$DVt5xoUXw7KT5RIJSaMMv.SYdyrklaGx6w6w743o089RajXr0ugDq', 'ALUNO', '2024-11-25 12:16:52', NULL),
	(203, 'Aluno', 'joviza@alu', '$2y$10$LFV01cErUMUyBlw4aWpG3eCTQOSVouBwlTYeklPhmrVQW.Z65YMpm', 'ALUNO', '2024-11-25 12:20:13', NULL),
	(214, 'Izabele Regina', 'iza@alu', '$2y$10$tIHjwB9tag3vA65rXqCAi.G1LNlkEhAGaYzaKq02oAS2Y9mdNXLW2', 'ALUNO', '2024-11-25 16:20:51', '../../img/user/6744ce137d6c5.jpeg'),
	(218, 'MesquitaRio', 'mesq@gmail.com', '$2y$10$JGKJOpI2.4YZmUxRWGoOJu0BWrSjUtB5/4D9PDU8y0m.FbiTxOOYy', 'UNIDADE_ENSINO', '2024-11-25 16:45:35', '../../img/user/6744d3dfb9299.jpg'),
	(219, 'EMÍLIO CARLOS', 'emilio@gmail.com', '$2y$10$cgqaPv8dfmnoDu7fbgJZYeIDqF6zQwri76ohk7oaCcRXmY5UXYJ9y', 'UNIDADE_ENSINO', '2024-11-25 16:46:23', '../../img/user/6744d40f12458.jpeg'),
	(220, 'Aluno', 'silvaizabeleregina@gmail.com', '$2y$10$yhWtx8NKOlQ7SmtuFs/eT..I7NspWGxorOIQ5eurOlLgPgATNDAwK', 'ALUNO', '2024-11-26 02:04:16', NULL),
	(223, 'Fabrício Oliveira', 'fb@prof.com', '$2y$10$3eE4zKD9Dl1iwlQPG/eB9.u5pIwz0SmNMHccOz0i0Py0fRt4Bct.K', 'TUTOR', '2024-11-26 03:05:08', NULL),
	(224, 'Jovii', 'jovi@adm', '$2y$10$YAjr5511RefbwIQBAhTac.cRCbYbnVhz2nzCYcTSkMueuGzHmBDGK', 'ADMINISTRADOR', '2024-11-27 17:10:50', '../../img/adm/67477cca3b7b1.jpg'),
	(235, 'Iza', 'iza@adm', '', 'ADMINISTRADOR', '2024-11-28 22:17:20', NULL),
	(237, 'TRYHR', 'izabeleregina@gmail.com', '$2y$10$6l9lRjAZnTYFGd04H/YXqes/aaqvYdv99VwfXHY44ZemORfw1Q4Y2', 'TUTOR', '2024-11-28 23:09:07', NULL),
	(240, 'Aluno', 'jovi@alu', '$2y$10$acnEW8CNskH4KqX.HQQ5FekTXUMA86PZjWQdaLa2N0y7ACQkOH9D2', 'ALUNO', '2024-11-30 19:36:59', '../../img/semfoto.png'),
	(242, 'Iza', 'izaa@alu', '$2y$10$XzgXnLzuRwZ15QTnBU9E2uY27Njg3AKKac9viz1GywBxu5JN6sWiK', 'ALUNO', '2024-11-30 19:48:18', ''),
	(243, 'teste', 'teste@tutor', '$2y$10$YF2noVv8UXvlukoRk7kBOe9j7MkTS2QTxt.GZZ0Hf0VAmbAgcpc3.', 'TUTOR', '2024-11-30 20:01:54', NULL),
	(244, 'ewqeqw', 'testando@tutor', '$2y$10$wTz8wIygZRm/Ha408oCAreBMZCUgMnjUhVP6qxSfkSEddKYhGVn96', 'TUTOR', '2024-11-30 20:21:36', NULL);
/*!40000 ALTER TABLE `usuarios` ENABLE KEYS */;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
